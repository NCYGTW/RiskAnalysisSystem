[
  {
    "company_name": "广州信邦智能装备股份有限公司",
    "risk_category": "虚增营业收入",
    "risk_description": "本年企业营业收入增长超过20%，应收账款周转率高于行业总体样本中85%的企业。（模型公式编号：191101030）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查收入增长与应收账款周转率异常风险\n    \n    判断条件：\n    1. 企业本年营业收入增长率 > 20%\n    2. 企业应收账款周转率 > 行业85分位值\n    \"\"\"\n    \n    try:\n        # 获取企业当年营业收入增长率数据\n        revenue_growth = None\n        # 获取企业当年应收账款周转率数据\n        company_turnover = None\n        # 获取行业应收账款周转率样本数据\n        industry_turnover_data = []\n        \n        # 从数据字典中提取所需数据\n        for item in data_dict.get('model_items', []):\n            if item.get('项目名称') == '营业收入增长率' and item.get('类型') == '企业':\n                revenue_growth = float(item.get('2024', 0))\n            elif item.get('项目名称') == '应收票据、应收账款、应收款项融资及合同资产周转率【次】':\n                if item.get('类型') == '企业':\n                    company_turnover = float(item.get('2024', 0))\n                elif item.get('类型') == '行业':\n                    # 收集行业样本数据（2023和2024年数据）\n                    industry_turnover_data.extend([\n                        float(item.get('2023', 0)),\n                        float(item.get('2024', 0))\n                    ])\n        \n        # 检查数据完整性\n        if revenue_growth is None or company_turnover is None or len(industry_turnover_data) == 0:\n            return False  # 数据缺失，无法判断风险\n        \n        # 计算行业85分位值\n        industry_turnover_data_sorted = sorted(industry_turnover_data)\n        n = len(industry_turnover_data_sorted)\n        # 计算85分位数的位置\n        percentile_85_index = int(0.85 * n)\n        industry_85_percentile = industry_turnover_data_sorted[percentile_85_index]\n        \n        # 判断风险条件\n        # 条件1：营业收入增长率 > 20%\n        condition1 = revenue_growth > 20.0\n        \n        # 条件2：应收账款周转率 > 行业85分位值\n        condition2 = company_turnover > industry_85_percentile\n        \n        # 两个条件同时满足时存在风险\n        return condition1 and condition2\n        \n    except (ValueError, TypeError, IndexError):\n        # 处理数据转换错误或其他异常情况\n        return False"
  },
  {
    "company_name": "广州信邦智能装备股份有限公司",
    "risk_category": "提前确认营业收入",
    "risk_description": "本年企业营业收入增长超过20%，且大于销售商品和提供劳务收到的现金增长率，同时其差额超过行业均值的3倍。（模型公式编号：191101002）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查收入与现金流增长不匹配风险\n    \n    参数:\n        data_dict: 包含财务数据的字典\n        \n    返回:\n        bool: True表示存在风险，False表示不存在风险\n    \"\"\"\n    try:\n        # 从数据字典中提取所需数据\n        # 企业本年营业收入增长率\n        corp_revenue_growth = float(data_dict.get('企业本年营业收入增长率', 0))\n        \n        # 行业本年营业收入增长率\n        industry_revenue_growth = float(data_dict.get('行业本年营业收入增长率', 0))\n        \n        # 企业本年销售商品、提供劳务收到的现金增长率\n        corp_cash_growth = float(data_dict.get('企业本年销售商品、提供劳务收到的现金增长率', 0))\n        \n        # 行业本年销售商品、提供劳务收到的现金增长率\n        industry_cash_growth = float(data_dict.get('行业本年销售商品、提供劳务收到的现金增长率', 0))\n        \n        # 条件1: 企业本年营业收入增长率 > 20%\n        condition1 = corp_revenue_growth > 20\n        \n        # 条件2: 企业营业收入增长率 > 企业销售商品、提供劳务收到的现金增长率\n        condition2 = corp_revenue_growth > corp_cash_growth\n        \n        # 条件3: (企业营业收入增长率 - 企业销售商品、提供劳务收到的现金增长率) > \n        #        3 × (行业营业收入增长率 - 行业销售商品、提供劳务收到的现金增长率)\n        corp_diff = corp_revenue_growth - corp_cash_growth\n        industry_diff = industry_revenue_growth - industry_cash_growth\n        condition3 = corp_diff > (3 * industry_diff)\n        \n        # 三个条件同时满足时存在风险\n        return condition1 and condition2 and condition3\n        \n    except (ValueError, TypeError):\n        # 处理数据缺失或格式错误的情况\n        return False"
  },
  {
    "company_name": "广州信邦智能装备股份有限公司",
    "risk_category": "提前确认营业收入",
    "risk_description": "本年行业营业收入增长率高于销售商品、提供劳务收到的现金增长率，且其差额和上年比扩大；同时，本年企业营业收入增长率高于销售商品、提供劳务收到的现金增长率且和上年比差异扩大；且企业本年营业收入增长率和销售商品、提供劳务收到的现金增长率的差额比行业高5个百分点以上。（模型公式编号：191101018）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查营业收入与现金流入增长不匹配风险\n    \n    参数:\n        data_dict: 包含财务数据的字典，需要包含以下键值对:\n            '企业营业收入增长率_2024': 2024年企业营业收入增长率\n            '企业营业收入增长率_2023': 2023年企业营业收入增长率\n            '企业销售商品提供劳务收到的现金增长率_2024': 2024年企业销售商品、提供劳务收到的现金增长率\n            '企业销售商品提供劳务收到的现金增长率_2023': 2023年企业销售商品、提供劳务收到的现金增长率\n            '行业营业收入增长率_2024': 2024年行业营业收入增长率\n            '行业营业收入增长率_2023': 2023年行业营业收入增长率\n            '行业销售商品提供劳务收到的现金增长率_2024': 2024年行业销售商品、提供劳务收到的现金增长率\n            '行业销售商品提供劳务收到的现金增长率_2023': 2023年行业销售商品、提供劳务收到的现金增长率\n    \n    返回:\n        bool: True表示存在风险，False表示不存在风险\n    \"\"\"\n    try:\n        # 提取企业数据\n        corp_rev_growth_2024 = float(data_dict.get('企业营业收入增长率_2024', 0))\n        corp_rev_growth_2023 = float(data_dict.get('企业营业收入增长率_2023', 0))\n        corp_cash_growth_2024 = float(data_dict.get('企业销售商品提供劳务收到的现金增长率_2024', 0))\n        corp_cash_growth_2023 = float(data_dict.get('企业销售商品提供劳务收到的现金增长率_2023', 0))\n        \n        # 提取行业数据\n        ind_rev_growth_2024 = float(data_dict.get('行业营业收入增长率_2024', 0))\n        ind_rev_growth_2023 = float(data_dict.get('行业营业收入增长率_2023', 0))\n        ind_cash_growth_2024 = float(data_dict.get('行业销售商品提供劳务收到的现金增长率_2024', 0))\n        ind_cash_growth_2023 = float(data_dict.get('行业销售商品提供劳务收到的现金增长率_2023', 0))\n        \n        # 条件1: 本年行业营业收入增长率 > 本年行业销售商品、提供劳务收到的现金增长率\n        cond1 = ind_rev_growth_2024 > ind_cash_growth_2024\n        \n        # 条件2: (本年行业营业收入增长率 - 本年行业销售商品、提供劳务收到的现金增长率) > \n        #        (上年行业营业收入增长率 - 上年行业销售商品、提供劳务收到的现金增长率)\n        ind_diff_2024 = ind_rev_growth_2024 - ind_cash_growth_2024\n        ind_diff_2023 = ind_rev_growth_2023 - ind_cash_growth_2023\n        cond2 = ind_diff_2024 > ind_diff_2023\n        \n        # 条件3: 本年企业营业收入增长率 > 本年企业销售商品、提供劳务收到的现金增长率\n        cond3 = corp_rev_growth_2024 > corp_cash_growth_2024\n        \n        # 条件4: (本年企业营业收入增长率 - 本年企业销售商品、提供劳务收到的现金增长率) > \n        #        (上年企业营业收入增长率 - 上年企业销售商品、提供劳务收到的现金增长率)\n        corp_diff_2024 = corp_rev_growth_2024 - corp_cash_growth_2024\n        corp_diff_2023 = corp_rev_growth_2023 - corp_cash_growth_2023\n        cond4 = corp_diff_2024 > corp_diff_2023\n        \n        # 条件5: (本年企业营业收入增长率 - 本年企业销售商品、提供劳务收到的现金增长率) - \n        #        (本年行业营业收入增长率 - 本年行业销售商品、提供劳务收到的现金增长率) > 5\n        cond5 = (corp_diff_2024 - ind_diff_2024) > 5\n        \n        # 所有条件都满足时返回True，表示存在风险\n        return cond1 and cond2 and cond3 and cond4 and cond5\n        \n    except (ValueError, TypeError):\n        # 处理数据缺失或格式错误的情况\n        return False"
  },
  {
    "company_name": "广州信邦智能装备股份有限公司",
    "risk_category": "提前确认营业收入",
    "risk_description": "本年企业股本较上年无变动，长期股权投资变动不超过5%，营业收入增长超过30%。（模型公式编号：191101112）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查企业财务风险\n    风险条件：股本无变动、长期投资变动不超过5%、营业收入增长超过30%\n    \"\"\"\n    try:\n        # 获取股本增长率数据\n        equity_growth = data_dict.get('股本增长率', {})\n        equity_2023 = float(equity_growth.get('2023', 0))\n        equity_2024 = float(equity_growth.get('2024', 0))\n        \n        # 获取长期股权投资增长率数据\n        investment_growth = data_dict.get('长期股权投资增长率', {})\n        investment_2023 = float(investment_growth.get('2023', 0))\n        investment_2024 = float(investment_growth.get('2024', 0))\n        \n        # 获取营业收入增长率数据\n        revenue_growth = data_dict.get('营业收入增长率', {})\n        revenue_2023 = float(revenue_growth.get('2023', 0))\n        revenue_2024 = float(revenue_growth.get('2024', 0))\n        \n        # 判断条件1：股本增长率本年与上年无变动（==0.00）\n        condition1 = equity_2024 == 0.00\n        \n        # 判断条件2：长期股权投资增长率变动不超过5%（<=5.00）\n        condition2 = investment_2024 <= 5.00\n        \n        # 判断条件3：营业收入增长率增长超过30%（>30.00）\n        condition3 = revenue_2024 > 30.00\n        \n        # 三个条件同时满足时存在风险\n        return condition1 and condition2 and condition3\n        \n    except (ValueError, TypeError, AttributeError):\n        # 处理数据缺失或格式错误的情况\n        return False"
  },
  {
    "company_name": "广州信邦智能装备股份有限公司",
    "risk_category": "关联方占用资金",
    "risk_description": "本年企业预付账款增长超过50%，且占流动资产比重高于行业总体样本中85%的企业。（模型公式编号：200301004）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查预付账款异常增长风险\n    \n    参数:\n        data_dict: 包含财务数据的字典\n        \n    返回:\n        bool: True表示存在风险，False表示不存在风险\n    \"\"\"\n    try:\n        # 获取企业预付款项增长率（2024年）\n        prepayment_growth_rate = float(data_dict['model_items'][0]['2024'])\n        \n        # 获取企业预付款项占流动资产比例（2024年）\n        prepayment_ratio_company = float(data_dict['model_items'][1]['2024'])\n        \n        # 获取行业预付款项占流动资产比例的85分位数值（2024年）\n        prepayment_ratio_industry_85 = float(data_dict['model_items'][2]['2024'])\n        \n        # 判断条件1：预付款项增长率 > 50%\n        condition1 = prepayment_growth_rate > 50\n        \n        # 判断条件2：企业预付款项占流动资产合计比(%) > 行业85分位数值\n        condition2 = prepayment_ratio_company > prepayment_ratio_industry_85\n        \n        # 两个条件同时满足时判定为存在风险\n        return condition1 and condition2\n        \n    except (KeyError, IndexError, ValueError, TypeError):\n        # 处理数据缺失或格式错误的情况\n        return False"
  },
  {
    "company_name": "广州信邦智能装备股份有限公司",
    "risk_category": "货币资金错报",
    "risk_description": "本年企业货币资金超过“短长期债务”的5倍，股本无变动或增长不到1%，资本公积无变动或增长不到5%。（模型公式编号：191101103）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查资金冗余与资本结构变动不足风险\n    判断条件：1) 货币资金 > 5 × 短长期债务；2) 股本增长率 ≤ 1%；3) 资本公积增长率 ≤ 5%\n    \"\"\"\n    try:\n        # 获取财务数据，处理可能的缺失值\n        monetary_fund = float(data_dict.get('货币资金', {}).get('2024', 0))\n        total_debt = float(data_dict.get('短长期债务', {}).get('2024', 0))\n        equity_growth_rate = float(data_dict.get('股本增长率', {}).get('2024', 0))\n        capital_reserve_growth_rate = float(data_dict.get('资本公积增长率', {}).get('2024', 0))\n        \n        # 条件1：货币资金是否超过短长期债务的5倍\n        condition1 = monetary_fund > 5 * total_debt\n        \n        # 条件2：股本增长率是否不超过1%\n        condition2 = equity_growth_rate <= 1\n        \n        # 条件3：资本公积增长率是否不超过5%\n        condition3 = capital_reserve_growth_rate <= 5\n        \n        # 三个条件需同时满足才存在风险\n        return condition1 and condition2 and condition3\n        \n    except (ValueError, TypeError):\n        # 处理数据缺失或格式错误的情况\n        return False"
  },
  {
    "company_name": "广州信邦智能装备股份有限公司",
    "risk_category": "违规资金收付",
    "risk_description": "本年企业银行手续费（财务费用-利息费用+利息收入，未考虑汇兑损益影响）占经营活动现金流出小计、投资活动现金流出小计及筹资活动现金流出小计三项之和的比例超过0.5%。（模型公式编号：191101089）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查财务费用结构异常风险\n    判断条件：银行手续费占现金流出总额的比例 > 0.5%\n    \"\"\"\n    \n    try:\n        # 提取所需财务数据\n        financial_expense = float(data_dict.get('财务费用', 0))\n        interest_expense = float(data_dict.get('利息费用', 0))\n        interest_income = float(data_dict.get('利息收入', 0))\n        operating_outflow = float(data_dict.get('经营活动现金流出小计', 0))\n        investing_outflow = float(data_dict.get('投资活动现金流出小计', 0))\n        financing_outflow = float(data_dict.get('筹资活动现金流出小计', 0))\n        \n        # 计算银行手续费（财务费用-利息费用+利息收入）\n        bank_fee = financial_expense - interest_expense + interest_income\n        \n        # 计算现金流出总额（三项现金流出之和）\n        total_cash_outflow = operating_outflow + investing_outflow + financing_outflow\n        \n        # 计算银行手续费占比\n        if total_cash_outflow == 0:\n            # 避免除零错误，如果现金流出总额为0，则占比为0\n            bank_fee_ratio = 0\n        else:\n            bank_fee_ratio = bank_fee / total_cash_outflow\n        \n        # 判断是否存在风险：银行手续费占比 > 0.5%\n        return bank_fee_ratio > 0.005\n        \n    except (ValueError, TypeError):\n        # 处理数据缺失或格式错误的情况\n        return False"
  },
  {
    "company_name": "广州信邦智能装备股份有限公司",
    "risk_category": "违规资金收付",
    "risk_description": "本年企业其他流动资产占流动资产合计的比重超过15%。（模型公式编号：191101100）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查其他流动资产占流动资产合计的比重是否超过15%\n    风险模型公式编号：191101100\n    \"\"\"\n    try:\n        # 获取其他流动资产和流动资产合计数据\n        other_current_assets = float(data_dict.get('其他流动资产', 0))\n        total_current_assets = float(data_dict.get('流动资产合计', 0))\n        \n        # 检查数据有效性：流动资产合计必须大于0\n        if total_current_assets <= 0:\n            return False  # 数据无效，无法计算比例\n        \n        # 计算其他流动资产占流动资产合计的比例（百分比）\n        ratio = (other_current_assets / total_current_assets) * 100\n        \n        # 判断是否存在风险：比例超过15%即为存在风险\n        return ratio > 15\n        \n    except (ValueError, TypeError, ZeroDivisionError):\n        # 处理数据缺失或格式错误的情况\n        return False"
  },
  {
    "company_name": "广州信邦智能装备股份有限公司",
    "risk_category": "违规资金收付",
    "risk_description": "以前少计、本年多计成本或费用",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查成本费用确认风险（以前年度少计、本年度多计）\n    判断条件：\n    1. 利息费用年度增长率异常高（如>50%）\n    2. 债务规模变化与利息费用变化方向不一致（债务减少但利息费用大幅增加）\n    \"\"\"\n    \n    # 提取所需数据，处理缺失情况\n    try:\n        # 获取利息费用数据\n        interest_2023 = float(data_dict['model_items'][0]['2023'].replace(',', ''))\n        interest_2024 = float(data_dict['model_items'][0]['2024'].replace(',', ''))\n        \n        # 获取债务总额数据\n        debt_2023 = float(data_dict['model_items'][1]['2023'].replace(',', ''))\n        debt_2024 = float(data_dict['model_items'][1]['2024'].replace(',', ''))\n    except (KeyError, IndexError, ValueError, TypeError):\n        # 数据缺失或格式错误时返回False\n        return False\n    \n    # 计算利息费用增长率\n    if interest_2023 == 0:\n        # 避免除零错误\n        interest_growth_rate = float('inf')\n    else:\n        interest_growth_rate = (interest_2024 - interest_2023) / interest_2023\n    \n    # 计算债务变化率\n    if debt_2023 == 0:\n        debt_change_rate = float('inf')\n    else:\n        debt_change_rate = (debt_2024 - debt_2023) / debt_2023\n    \n    # 条件1：利息费用增长率超过50%\n    condition1 = interest_growth_rate > 0.5\n    \n    # 条件2：债务减少但利息费用大幅增加\n    # 债务减少（变化率为负）且利息费用增长率超过30%\n    condition2 = (debt_change_rate < 0) and (interest_growth_rate > 0.3)\n    \n    # 只要满足任一条件即认为存在风险\n    return condition1 or condition2"
  },
  {
    "company_name": "浙江联翔智能家居股份有限公司",
    "risk_category": "虚增营业收入",
    "risk_description": "本年企业“每元工资提供的营业收入”比前二年均值高1.2倍，营业收入增长超过20%。（模型公式编号：191101056）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查运营效率异常与增长波动风险\n    判断条件：本年每元工资提供的营业收入 > 前二年均值的1.2倍 且 本年营业收入增长率 > 20%\n    \"\"\"\n    \n    # 条件1：检查本年每元工资提供的营业收入是否大于前二年均值的1.2倍\n    try:\n        # 获取本年数据\n        current_revenue_per_wage = float(data_dict.get('2024年每元工资提供的营业收入', 0))\n        \n        # 获取前两年数据并计算均值\n        prev_year_2023 = data_dict.get('2023年每元工资提供的营业收入')\n        prev_year_2022 = data_dict.get('2022年每元工资提供的营业收入')\n        \n        # 处理数据缺失情况\n        if prev_year_2023 is None or prev_year_2022 is None:\n            return False  # 数据缺失，无法判断风险\n            \n        prev_years_avg = (float(prev_year_2023) + float(prev_year_2022)) / 2\n        \n        # 判断条件1\n        condition1 = current_revenue_per_wage > prev_years_avg * 1.2\n        \n    except (ValueError, TypeError):\n        return False  # 数据格式错误，无法判断风险\n    \n    # 条件2：检查本年营业收入增长率是否大于20%\n    try:\n        current_growth_rate = float(data_dict.get('2024年营业收入增长率', 0))\n        condition2 = current_growth_rate > 20\n        \n    except (ValueError, TypeError):\n        return False  # 数据格式错误，无法判断风险\n    \n    # 逻辑关系：两个条件需同时满足\n    return condition1 and condition2"
  },
  {
    "company_name": "浙江联翔智能家居股份有限公司",
    "risk_category": "提前确认营业收入",
    "risk_description": "本年企业营业收入增长超过20%，且大于销售商品和提供劳务收到的现金增长率，同时其差额超过行业均值的3倍。（模型公式编号：191101002）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查收入质量风险\n    \n    参数:\n        data_dict: 包含财务数据的字典\n        \n    返回:\n        bool: True表示存在风险，False表示不存在风险\n    \"\"\"\n    \n    try:\n        # 提取2024年数据\n        company_revenue_growth = float(data_dict['model_items'][0]['2024'])\n        industry_revenue_growth = float(data_dict['model_items'][1]['2024'])\n        company_cash_growth = float(data_dict['model_items'][2]['2024'])\n        industry_cash_growth = float(data_dict['model_items'][3]['2024'])\n        \n        # 判断条件1: 企业营业收入增长率 > 20%\n        condition1 = company_revenue_growth > 20\n        \n        # 判断条件2: 企业营业收入增长率 > 企业销售商品、提供劳务收到的现金增长率\n        condition2 = company_revenue_growth > company_cash_growth\n        \n        # 判断条件3: (企业营业收入增长率 - 企业现金增长率) > 3 × (行业营业收入增长率 - 行业现金增长率)\n        company_diff = company_revenue_growth - company_cash_growth\n        industry_diff = industry_revenue_growth - industry_cash_growth\n        condition3 = company_diff > 3 * industry_diff\n        \n        # 三个条件同时满足时存在风险\n        return condition1 and condition2 and condition3\n        \n    except (KeyError, IndexError, ValueError, TypeError):\n        # 处理数据缺失或格式错误的情况\n        return False"
  },
  {
    "company_name": "浙江联翔智能家居股份有限公司",
    "risk_category": "提前确认营业收入",
    "risk_description": "本年企业应收账款周转率降低，存货周转率提高，营业收入增长超过20%。（模型公式编号：191101035）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查运营效率风险与增长质量风险\n    根据应收账款周转率、存货周转率和营业收入增长率的变化情况判断风险\n    \"\"\"\n    try:\n        # 获取应收账款周转率数据\n        ar_turnover_2023 = float(data_dict.get('应收票据、应收账款、应收款项融资及合同资产周转率【次】', {}).get('2023', 0))\n        ar_turnover_2024 = float(data_dict.get('应收票据、应收账款、应收款项融资及合同资产周转率【次】', {}).get('2024', 0))\n        \n        # 获取存货周转率数据\n        inventory_turnover_2023 = float(data_dict.get('存货周转率【次】', {}).get('2023', 0))\n        inventory_turnover_2024 = float(data_dict.get('存货周转率【次】', {}).get('2024', 0))\n        \n        # 获取营业收入增长率数据\n        revenue_growth_2024 = float(data_dict.get('营业收入增长率', {}).get('2024', 0))\n        \n        # 检查数据完整性\n        if any([ar_turnover_2023 == 0, ar_turnover_2024 == 0, \n                inventory_turnover_2023 == 0, inventory_turnover_2024 == 0,\n                revenue_growth_2024 == 0]):\n            return False\n        \n        # 判断条件1：应收账款周转率2024年相比2023年显著降低（下降超过50%）\n        ar_turnover_decline = (ar_turnover_2023 - ar_turnover_2024) / ar_turnover_2023 > 0.5\n        \n        # 判断条件2：存货周转率2024年相比2023年有所提高\n        inventory_turnover_improve = inventory_turnover_2024 > inventory_turnover_2023\n        \n        # 判断条件3：营业收入增长率2024年超过20%的增长阈值\n        revenue_growth_exceed = revenue_growth_2024 > 20\n        \n        # 综合判断：三个条件同时满足时存在风险\n        return ar_turnover_decline and inventory_turnover_improve and revenue_growth_exceed\n        \n    except (ValueError, TypeError, KeyError):\n        # 处理数据缺失或格式错误的情况\n        return False"
  },
  {
    "company_name": "浙江联翔智能家居股份有限公司",
    "risk_category": "提前确认营业收入",
    "risk_description": "本年企业应收账款增长额占营业收入的比重高于行业总体样本中85%的企业。（模型公式编号：191101061）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查财务结构风险：判断企业应收账款增长额占营业收入的比例是否高于行业85%分位数\n    \n    参数:\n        data_dict: 包含所需财务数据的字典\n        \n    返回:\n        bool: True表示存在风险，False表示不存在风险\n    \"\"\"\n    try:\n        # 获取企业当期应收账款增长额\n        enterprise_receivable_growth = float(data_dict.get('enterprise_receivable_growth', 0))\n        \n        # 获取企业当期营业收入\n        enterprise_revenue = float(data_dict.get('enterprise_revenue', 1))  # 避免除零错误\n        \n        # 获取行业总体样本的应收账款增长额占营业收入比例数据\n        industry_ratios = data_dict.get('industry_receivable_ratios', [])\n        \n        # 检查数据完整性\n        if (enterprise_receivable_growth == 0 or enterprise_revenue == 0 or \n            not industry_ratios or len(industry_ratios) == 0):\n            return False  # 数据缺失时默认不存在风险\n        \n        # 计算企业应收账款增长额占营业收入的比例\n        enterprise_ratio = (enterprise_receivable_growth / enterprise_revenue) * 100\n        \n        # 计算行业总体样本的85%分位数\n        import numpy as np\n        industry_85_percentile = np.percentile(industry_ratios, 85)\n        \n        # 判断是否存在风险：企业比例高于行业85%分位数\n        risk_exists = enterprise_ratio > industry_85_percentile\n        \n        return risk_exists\n        \n    except (ValueError, TypeError, ZeroDivisionError):\n        # 处理数据转换错误、类型错误或除零错误\n        return False"
  },
  {
    "company_name": "浙江联翔智能家居股份有限公司",
    "risk_category": "提前确认营业收入",
    "risk_description": "本年企业营业收入增长超过20%，营业收入增长率超过销售商品和提供劳务收到的现金增长率的1.5倍。（模型公式编号：210101002）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查收入质量风险\n    判断条件：1) 本年营业收入增长率 > 20%\n             2) 营业收入增长率 > 1.5 × 销售商品、提供劳务收到的现金增长率\n    \"\"\"\n    \n    # 获取营业收入增长率数据\n    revenue_growth_rate = None\n    # 获取销售商品、提供劳务收到的现金增长率数据\n    cash_received_growth_rate = None\n    \n    # 从数据字典中提取所需数据\n    for item in data_dict.get('model_items', []):\n        if item.get('项目名称') == '营业收入增长率':\n            revenue_growth_rate = item.get('2024')\n        elif item.get('项目名称') == '销售商品、提供劳务收到的现金增长率':\n            cash_received_growth_rate = item.get('2024')\n    \n    # 检查数据是否存在且可转换为数值\n    try:\n        revenue_growth = float(revenue_growth_rate) if revenue_growth_rate is not None else None\n        cash_growth = float(cash_received_growth_rate) if cash_received_growth_rate is not None else None\n    except (ValueError, TypeError):\n        # 数据转换失败，返回False表示无法判断风险\n        return False\n    \n    # 检查数据是否完整\n    if revenue_growth is None or cash_growth is None:\n        return False\n    \n    # 判断条件1：本年营业收入增长率 > 20%\n    condition1 = revenue_growth > 20.0\n    \n    # 判断条件2：营业收入增长率 > 1.5 × 销售商品、提供劳务收到的现金增长率\n    condition2 = revenue_growth > (1.5 * cash_growth)\n    \n    # 两个条件都满足时存在风险\n    return condition1 and condition2"
  },
  {
    "company_name": "浙江联翔智能家居股份有限公司",
    "risk_category": "少结转主营业务成本",
    "risk_description": "本年企业应收账款周转率与存货周转率均不到行业均值的90%，毛利率比行业均值高10个百分点以上。（模型公式编号：191101045）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查运营效率与盈利能力异常风险\n    \n    判断条件：\n    1. 企业应收账款周转率 < 行业均值 × 90%\n    2. 企业存货周转率 < 行业均值 × 90%\n    3. 企业毛利率 > 行业均值 + 10%\n    \n    参数：\n    data_dict: 包含财务数据的字典\n    \n    返回：\n    bool: True表示存在风险，False表示不存在风险\n    \"\"\"\n    try:\n        # 提取2024年数据\n        # 企业应收账款周转率\n        ar_turnover_company = float(data_dict['model_items'][1]['2024'])\n        \n        # 行业应收账款周转率均值\n        ar_turnover_industry = float(data_dict['model_items'][2]['2024'])\n        \n        # 企业存货周转率\n        inventory_turnover_company = float(data_dict['model_items'][3]['2024'])\n        \n        # 行业存货周转率均值\n        inventory_turnover_industry = float(data_dict['model_items'][4]['2024'])\n        \n        # 企业销售毛利率\n        gross_margin_company = float(data_dict['model_items'][5]['2024'])\n        \n        # 行业销售毛利率均值\n        gross_margin_industry = float(data_dict['model_items'][6]['2024'])\n        \n        # 判断条件1：企业应收账款周转率 < 行业均值 × 90%\n        condition1 = ar_turnover_company < (ar_turnover_industry * 0.9)\n        \n        # 判断条件2：企业存货周转率 < 行业均值 × 90%\n        condition2 = inventory_turnover_company < (inventory_turnover_industry * 0.9)\n        \n        # 判断条件3：企业毛利率 > 行业均值 + 10%\n        condition3 = gross_margin_company > (gross_margin_industry + 10)\n        \n        # 三个条件同时满足时判定为存在风险\n        return condition1 and condition2 and condition3\n        \n    except (KeyError, IndexError, ValueError, TypeError):\n        # 处理数据缺失或格式错误的情况\n        return False"
  },
  {
    "company_name": "浙江联翔智能家居股份有限公司",
    "risk_category": "少结转主营业务成本",
    "risk_description": "本年企业股本较上年无变动，长期股权投资减少，营业收入增长超过30%。（模型公式编号：191101110）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查扩张性经营风险\n    判断条件：本年股本增长率为0，长期股权投资增长率为负，营业收入增长率超过30%\n    \"\"\"\n    try:\n        # 获取股本增长率数据\n        equity_growth_2024 = float(data_dict.get('股本增长率', {}).get('2024', 0))\n        \n        # 获取长期股权投资增长率数据\n        investment_growth_2024 = float(data_dict.get('长期股权投资增长率', {}).get('2024', 0))\n        \n        # 获取营业收入增长率数据\n        revenue_growth_2024 = float(data_dict.get('营业收入增长率', {}).get('2024', 0))\n        \n        # 判断条件1：本年股本增长率为0（无变动）\n        condition1 = equity_growth_2024 == 0\n        \n        # 判断条件2：长期股权投资增长率为负（减少）\n        condition2 = investment_growth_2024 < 0\n        \n        # 判断条件3：营业收入增长率超过30%（显著增长）\n        condition3 = revenue_growth_2024 > 30\n        \n        # 三个条件同时满足时存在风险\n        return condition1 and condition2 and condition3\n        \n    except (ValueError, TypeError, AttributeError):\n        # 处理数据缺失或格式错误的情况\n        return False"
  },
  {
    "company_name": "浙江联翔智能家居股份有限公司",
    "risk_category": "少计成本或费用",
    "risk_description": "本年企业营业收入增长超过20%，“经营业务利润”增长率比营业收入增长率高30个百分点以上。（模型公式编号：191101010）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查收入利润增长不匹配风险\n    模型公式编号：191101010\n    风险条件：本年营业收入增长率 > 20% 且 经营业务利润增长率 - 营业收入增长率 > 30%\n    \"\"\"\n    try:\n        # 从数据字典中提取所需增长率数据\n        revenue_growth_2024 = float(data_dict.get(\"营业收入增长率\", {}).get(\"2024\", 0))\n        profit_growth_2024 = float(data_dict.get(\"经营业务利润增长率\", {}).get(\"2024\", 0))\n        \n        # 检查条件1：本年营业收入增长率 > 20%\n        condition1 = revenue_growth_2024 > 20\n        \n        # 检查条件2：经营业务利润增长率 - 营业收入增长率 > 30%\n        growth_difference = profit_growth_2024 - revenue_growth_2024\n        condition2 = growth_difference > 30\n        \n        # 风险触发：需同时满足条件1和条件2\n        return condition1 and condition2\n        \n    except (ValueError, TypeError, AttributeError):\n        # 处理数据缺失或格式错误的情况\n        return False"
  },
  {
    "company_name": "浙江联翔智能家居股份有限公司",
    "risk_category": "少计成本或费用",
    "risk_description": "企业营业收入前二年持续下降，本年增长，且比本年销售费用增幅高4个百分点以上，营业利润上年为负，本年为正。（模型公式编号：191101013）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查收入质量风险\n    判断条件：\n    1. 前两年营业收入持续下降（2023年增长率为负）\n    2. 本年营业收入增长（2024年增长率为正）\n    3. 本年营业收入增长率比销售费用增长率高4个百分点以上\n    4. 上年营业利润为负（2023年为负数）\n    5. 本年营业利润为正（2024年为正数）\n    \"\"\"\n    \n    try:\n        # 获取营业收入增长率数据\n        revenue_growth_2023 = float(data_dict.get('营业收入增长率_2023', 0))\n        revenue_growth_2024 = float(data_dict.get('营业收入增长率_2024', 0))\n        \n        # 获取销售费用增长率数据\n        sales_expense_growth_2024 = float(data_dict.get('销售费用增长率_2024', 0))\n        \n        # 获取营业利润数据\n        operating_profit_2023 = float(data_dict.get('营业利润_2023', 0))\n        operating_profit_2024 = float(data_dict.get('营业利润_2024', 0))\n        \n        # 条件1：前两年营业收入持续下降（2023年增长率为负）\n        condition1 = revenue_growth_2023 < 0\n        \n        # 条件2：本年营业收入增长（2024年增长率为正）\n        condition2 = revenue_growth_2024 > 0\n        \n        # 条件3：本年营业收入增长率比销售费用增长率高4个百分点以上\n        condition3 = (revenue_growth_2024 - sales_expense_growth_2024) > 4\n        \n        # 条件4：上年营业利润为负（2023年为负数）\n        condition4 = operating_profit_2023 < 0\n        \n        # 条件5：本年营业利润为正（2024年为正数）\n        condition5 = operating_profit_2024 > 0\n        \n        # 所有条件都满足时存在风险\n        return condition1 and condition2 and condition3 and condition4 and condition5\n        \n    except (ValueError, TypeError):\n        # 数据缺失或格式错误时返回False\n        return False"
  },
  {
    "company_name": "浙江联翔智能家居股份有限公司",
    "risk_category": "少计成本或费用",
    "risk_description": "以前少计、本年多计信用或资产减值损失",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查信用减值损失计提异常风险\n    判断是否存在以前少计、本年多计信用或资产减值损失的情况\n    \"\"\"\n    \n    try:\n        # 提取各项目数据\n        credit_loss_data = next(item for item in data_dict['model_items'] \n                              if item['项目名称'] == '信用减值损失')\n        receivables_data = next(item for item in data_dict['model_items'] \n                              if item['项目名称'] == '应收票据、应收账款、应收款项融资及合同资产')\n        prepayment_data = next(item for item in data_dict['model_items'] \n                             if item['项目名称'] == '预付款项')\n        other_receivables_data = next(item for item in data_dict['model_items'] \n                                    if item['项目名称'] == '其他应收款')\n        \n        # 转换字符串为数值类型\n        credit_loss_2023 = float(credit_loss_data['2023'].replace(',', ''))\n        credit_loss_2024 = float(credit_loss_data['2024'].replace(',', ''))\n        receivables_2023 = float(receivables_data['2023'].replace(',', ''))\n        receivables_2024 = float(receivables_data['2024'].replace(',', ''))\n        prepayment_2023 = float(prepayment_data['2023'].replace(',', ''))\n        prepayment_2024 = float(prepayment_data['2024'].replace(',', ''))\n        other_receivables_2023 = float(other_receivables_data['2023'].replace(',', ''))\n        other_receivables_2024 = float(other_receivables_data['2024'].replace(',', ''))\n        \n        # 判断条件1：信用减值损失本年较上年大幅增加\n        credit_loss_increase = abs(credit_loss_2024) > abs(credit_loss_2023) * 3\n        \n        # 判断条件2：应收账款类资产本年较上年大幅增加\n        receivables_increase = receivables_2024 > receivables_2023 * 5\n        \n        # 判断条件3：其他应收款本年较上年大幅增加\n        other_receivables_increase = other_receivables_2024 > other_receivables_2023 * 3\n        \n        # 判断条件4：预付款项本年较上年有所减少\n        prepayment_decrease = prepayment_2024 < prepayment_2023\n        \n        # 综合判断：满足主要风险特征时返回True\n        # 信用减值损失大幅增加且应收账款类资产大幅增加为主要风险指标\n        if credit_loss_increase and receivables_increase:\n            return True\n        \n        # 其他组合情况也可能存在风险\n        if (credit_loss_increase and other_receivables_increase) or \\\n           (credit_loss_increase and prepayment_decrease):\n            return True\n            \n        return False\n        \n    except (KeyError, ValueError, StopIteration) as e:\n        # 处理数据缺失或格式错误的情况\n        print(f\"数据缺失或格式错误: {e}\")\n        return False"
  },
  {
    "company_name": "科大国盾量子技术股份有限公司",
    "risk_category": "虚增营业收入",
    "risk_description": "企业营业收入连续两年增长，且本年增长率高于行业总体样本中85%的企业。（模型公式编号：191101005）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查收入增长异常风险\n    判断条件：企业2023年和2024年营业收入增长率均需大于0（连续两年增长），\n    且2024年企业营业收入增长率需高于行业样本的85%分位数\n    \"\"\"\n    \n    try:\n        # 提取企业2023年营业收入增长率\n        comp_2023 = None\n        # 提取企业2024年营业收入增长率\n        comp_2024 = None\n        # 提取行业2024年营业收入增长率样本数据\n        industry_samples = []\n        \n        # 遍历数据字典，提取所需数据\n        for item in data_dict.get('model_items', []):\n            if item.get('项目名称') == '营业收入增长率':\n                if item.get('类型') == '企业':\n                    # 获取企业2023年增长率\n                    comp_2023_str = item.get('2023')\n                    if comp_2023_str is not None:\n                        comp_2023 = float(comp_2023_str)\n                    \n                    # 获取企业2024年增长率\n                    comp_2024_str = item.get('2024')\n                    if comp_2024_str is not None:\n                        comp_2024 = float(comp_2024_str)\n                \n                elif item.get('类型') == '行业':\n                    # 获取行业样本数据（这里假设数据以某种格式提供）\n                    # 实际应用中可能需要更复杂的数据提取逻辑\n                    industry_2024_str = item.get('2024')\n                    if industry_2024_str is not None:\n                        industry_samples.append(float(industry_2024_str))\n        \n        # 检查数据完整性\n        if comp_2023 is None or comp_2024 is None:\n            # 企业增长率数据缺失，无法判断风险\n            return False\n        \n        if not industry_samples:\n            # 行业样本数据缺失，无法计算85%分位数\n            return False\n        \n        # 条件1：企业连续两年增长率均大于0\n        condition1 = comp_2023 > 0 and comp_2024 > 0\n        \n        # 计算行业85%分位数\n        industry_samples_sorted = sorted(industry_samples)\n        n = len(industry_samples_sorted)\n        # 计算85%分位数的位置\n        percentile_index = int(0.85 * n)\n        industry_85_percentile = industry_samples_sorted[percentile_index]\n        \n        # 条件2：2024年企业增长率高于行业85%分位数\n        condition2 = comp_2024 > industry_85_percentile\n        \n        # 两个条件都满足时存在风险\n        return condition1 and condition2\n        \n    except (ValueError, TypeError, IndexError):\n        # 数据处理过程中出现异常，返回False表示无法判断风险\n        return False"
  },
  {
    "company_name": "科大国盾量子技术股份有限公司",
    "risk_category": "虚增营业收入",
    "risk_description": "本年企业“每元工资提供的营业收入”比前二年均值高1.2倍，营业收入增长超过20%。（模型公式编号：191101056）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查异常增长风险\n    \n    判断条件：\n    1. 本年每元工资提供的营业收入比前二年均值高1.2倍\n    2. 营业收入增长率超过20%\n    \"\"\"\n    \n    try:\n        # 获取2024年每元工资提供的营业收入\n        revenue_per_wage_2024 = float(data_dict.get('每元工资提供的营业收入_2024', 0))\n        \n        # 获取2023年每元工资提供的营业收入\n        revenue_per_wage_2023 = float(data_dict.get('每元工资提供的营业收入_2023', 0))\n        \n        # 获取2022年每元工资提供的营业收入（如果缺失则设为0）\n        revenue_per_wage_2022 = float(data_dict.get('每元工资提供的营业收入_2022', 0))\n        \n        # 获取2024年营业收入增长率\n        revenue_growth_rate_2024 = float(data_dict.get('营业收入增长率_2024', 0))\n        \n        # 检查是否有必要数据缺失\n        if revenue_per_wage_2024 == 0 or revenue_growth_rate_2024 == 0:\n            return False\n        \n        # 计算前二年均值（2022年和2023年）\n        if revenue_per_wage_2022 == 0 or revenue_per_wage_2023 == 0:\n            # 如果前二年数据有缺失，无法计算均值，返回无风险\n            return False\n        \n        previous_two_years_avg = (revenue_per_wage_2022 + revenue_per_wage_2023) / 2\n        \n        # 判断条件1：本年每元工资提供的营业收入比前二年均值高1.2倍\n        condition1 = revenue_per_wage_2024 >= previous_two_years_avg * 1.2\n        \n        # 判断条件2：营业收入增长率超过20%\n        condition2 = revenue_growth_rate_2024 > 20\n        \n        # 两个条件都满足时存在风险\n        return condition1 and condition2\n        \n    except (ValueError, TypeError):\n        # 数据处理异常时返回无风险\n        return False"
  },
  {
    "company_name": "科大国盾量子技术股份有限公司",
    "risk_category": "虚增营业收入",
    "risk_description": "本年企业“每元固定资产提供的营业收入”超过上年的1.2倍，固定资产减少不到10%，营业收入增长超过20%。（模型公式编号：191101080）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查固定资产效率异常风险\n    \n    参数:\n        data_dict: 包含财务数据的字典，需要包含以下键值对:\n            - '每元固定资产及使用权资产提供的营业收入': {'2023': 值, '2024': 值}\n            - '固定资产及使用权资产增长率': {'2023': 值, '2024': 值}\n            - '营业收入增长率': {'2023': 值, '2024': 值}\n    \n    返回:\n        bool: True表示存在风险，False表示不存在风险\n    \"\"\"\n    try:\n        # 获取各项财务数据\n        revenue_per_asset = data_dict.get('每元固定资产及使用权资产提供的营业收入', {})\n        fixed_asset_growth = data_dict.get('固定资产及使用权资产增长率', {})\n        revenue_growth = data_dict.get('营业收入增长率', {})\n        \n        # 检查数据完整性\n        if (not revenue_per_asset or not fixed_asset_growth or not revenue_growth or\n            '2023' not in revenue_per_asset or '2024' not in revenue_per_asset or\n            '2023' not in fixed_asset_growth or '2024' not in fixed_asset_growth or\n            '2023' not in revenue_growth or '2024' not in revenue_growth):\n            return False\n        \n        # 提取具体数值\n        rev_per_asset_2023 = float(revenue_per_asset['2023'])\n        rev_per_asset_2024 = float(revenue_per_asset['2024'])\n        fixed_growth_2024 = float(fixed_asset_growth['2024'])\n        revenue_growth_2024 = float(revenue_growth['2024'])\n        \n        # 判断条件1: 本年每元固定资产提供的营业收入 > 上年值的1.2倍\n        condition1 = rev_per_asset_2024 > rev_per_asset_2023 * 1.2\n        \n        # 判断条件2: 固定资产减少幅度 < 10% (增长率为负表示减少)\n        condition2 = fixed_growth_2024 > -10\n        \n        # 判断条件3: 营业收入增长幅度 > 20%\n        condition3 = revenue_growth_2024 > 20\n        \n        # 三个条件同时满足时判定为存在风险\n        return condition1 and condition2 and condition3\n        \n    except (ValueError, TypeError):\n        # 处理数据转换错误或类型错误\n        return False"
  },
  {
    "company_name": "科大国盾量子技术股份有限公司",
    "risk_category": "虚增营业收入",
    "risk_description": "本年企业固定资产原值增减不超过20%，“每元固定资产原值提供的营业收入”超过上年的1.5倍，营业收入增长超过20%。（模型公式编号：200201001）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查财务异常波动风险\n    风险触发条件：同时满足以下三个条件\n    1. 本年固定资产原值增长率绝对值 ≤ 20%\n    2. 本年每元固定资产原值提供的营业收入 ≥ 上年该指标的1.5倍\n    3. 本年营业收入增长率 ≥ 20%\n    \"\"\"\n    try:\n        # 获取财务数据\n        indicators = data_dict.get('model_items', [])\n        \n        # 提取各项指标数据\n        fixed_asset_growth = None\n        revenue_per_asset = None\n        revenue_growth = None\n        \n        for indicator in indicators:\n            name = indicator.get('项目名称', '')\n            if '固定资产及使用权资产原值增长率' in name:\n                fixed_asset_growth = {\n                    '2023': float(indicator.get('2023', 0)),\n                    '2024': float(indicator.get('2024', 0))\n                }\n            elif '每元固定资产及使用权资产原值提供的营业收入' in name:\n                revenue_per_asset = {\n                    '2023': float(indicator.get('2023', 0)),\n                    '2024': float(indicator.get('2024', 0))\n                }\n            elif '营业收入增长率' in name:\n                revenue_growth = {\n                    '2023': float(indicator.get('2023', 0)),\n                    '2024': float(indicator.get('2024', 0))\n                }\n        \n        # 检查数据完整性\n        if None in [fixed_asset_growth, revenue_per_asset, revenue_growth]:\n            return False\n        \n        # 条件1：本年固定资产原值增长率绝对值 ≤ 20%\n        condition1 = abs(fixed_asset_growth['2024']) <= 20\n        \n        # 条件2：本年每元固定资产原值提供的营业收入 ≥ 上年该指标的1.5倍\n        condition2 = revenue_per_asset['2024'] >= revenue_per_asset['2023'] * 1.5\n        \n        # 条件3：本年营业收入增长率 ≥ 20%\n        condition3 = revenue_growth['2024'] >= 20\n        \n        # 风险触发条件：三个条件需同时满足\n        return condition1 and condition2 and condition3\n        \n    except (ValueError, TypeError, KeyError):\n        # 处理数据缺失或格式错误的情况\n        return False"
  },
  {
    "company_name": "科大国盾量子技术股份有限公司",
    "risk_category": "提前确认营业收入",
    "risk_description": "本年企业营业收入增长超过20%，且大于销售商品和提供劳务收到的现金增长率，同时其差额超过行业均值的3倍。（模型公式编号：191101002）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查收入质量风险\n    \n    参数:\n        data_dict: 包含财务数据的字典\n        \n    返回:\n        bool: True表示存在风险，False表示不存在风险\n    \"\"\"\n    try:\n        # 提取所需数据，处理可能的缺失值\n        # 企业本年营业收入增长率\n        corp_revenue_growth = float(data_dict.get('企业本年营业收入增长率', 0))\n        \n        # 企业本年销售商品、提供劳务收到的现金增长率\n        corp_cash_growth = float(data_dict.get('企业本年销售商品、提供劳务收到的现金增长率', 0))\n        \n        # 行业本年营业收入增长率\n        industry_revenue_growth = float(data_dict.get('行业本年营业收入增长率', 0))\n        \n        # 行业本年销售商品、提供劳务收到的现金增长率\n        industry_cash_growth = float(data_dict.get('行业本年销售商品、提供劳务收到的现金增长率', 0))\n        \n        # 计算行业营业收入增长率与现金增长率差额的均值\n        industry_diff_mean = (industry_revenue_growth - industry_cash_growth)\n        \n        # 判断条件1：本年企业营业收入增长率 > 20%\n        condition1 = corp_revenue_growth > 20\n        \n        # 判断条件2：本年企业营业收入增长率 > 本年企业销售商品、提供劳务收到的现金增长率\n        condition2 = corp_revenue_growth > corp_cash_growth\n        \n        # 判断条件3：(企业营业收入增长率 - 企业现金增长率) > 3 × 行业差额均值\n        corp_diff = corp_revenue_growth - corp_cash_growth\n        condition3 = corp_diff > (3 * industry_diff_mean)\n        \n        # 所有条件都满足时存在风险\n        return condition1 and condition2 and condition3\n        \n    except (ValueError, TypeError):\n        # 数据格式错误或缺失时返回False\n        return False"
  },
  {
    "company_name": "科大国盾量子技术股份有限公司",
    "risk_category": "提前确认营业收入",
    "risk_description": "本年企业营业收入增长超过20%，营业收入增长率超过销售商品和提供劳务收到的现金增长率的1.5倍。（模型公式编号：210101002）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查收入质量风险\n    判断条件：\n    1. 本年营业收入增长率 > 20%\n    2. 营业收入增长率 > 1.5 × 销售商品、提供劳务收到的现金增长率\n    \"\"\"\n    \n    try:\n        # 获取营业收入增长率数据\n        revenue_growth_rate = None\n        # 获取销售商品、提供劳务收到的现金增长率数据\n        cash_received_growth_rate = None\n        \n        # 从数据字典中提取所需数据\n        for item in data_dict.get('model_items', []):\n            if item.get('项目名称') == '营业收入增长率':\n                revenue_growth_rate = float(item.get('2024', 0))\n            elif item.get('项目名称') == '销售商品、提供劳务收到的现金增长率':\n                cash_received_growth_rate = float(item.get('2024', 0))\n        \n        # 检查数据是否完整\n        if revenue_growth_rate is None or cash_received_growth_rate is None:\n            return False\n        \n        # 判断条件1：本年营业收入增长率 > 20%\n        condition1 = revenue_growth_rate > 20.0\n        \n        # 判断条件2：营业收入增长率 > 1.5 × 销售商品、提供劳务收到的现金增长率\n        condition2 = revenue_growth_rate > (1.5 * cash_received_growth_rate)\n        \n        # 两个条件都满足时存在风险\n        return condition1 and condition2\n        \n    except (ValueError, TypeError):\n        # 处理数据转换错误或类型错误\n        return False"
  },
  {
    "company_name": "科大国盾量子技术股份有限公司",
    "risk_category": "少结转主营业务成本",
    "risk_description": "本年企业存货周转率降低，应收账款周转率提高，营业收入增长超过20%。（模型公式编号：191101033）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查营运资金管理风险\n    判断条件：存货周转率降低且应收账款周转率提高且营业收入增长率超过20%\n    \"\"\"\n    \n    try:\n        # 从数据字典中提取所需数据\n        # 存货周转率数据\n        inventory_turnover_2023 = float(data_dict.get('存货周转率【次】_2023', 0))\n        inventory_turnover_2024 = float(data_dict.get('存货周转率【次】_2024', 0))\n        \n        # 应收账款周转率数据\n        receivables_turnover_2023 = float(data_dict.get('应收票据、应收账款、应收款项融资及合同资产周转率【次】_2023', 0))\n        receivables_turnover_2024 = float(data_dict.get('应收票据、应收账款、应收款项融资及合同资产周转率【次】_2024', 0))\n        \n        # 营业收入增长率数据\n        revenue_growth_2024 = float(data_dict.get('营业收入增长率_2024', 0))\n        \n        # 检查数据有效性（避免除零错误和无效数据）\n        if (inventory_turnover_2023 <= 0 or inventory_turnover_2024 <= 0 or \n            receivables_turnover_2023 <= 0 or receivables_turnover_2024 <= 0):\n            return False\n        \n        # 判断条件1：存货周转率是否降低（2024年 < 2023年）\n        condition1 = inventory_turnover_2024 < inventory_turnover_2023\n        \n        # 判断条件2：应收账款周转率是否提高（2024年 > 2023年）\n        condition2 = receivables_turnover_2024 > receivables_turnover_2023\n        \n        # 判断条件3：营业收入增长率是否超过20%\n        condition3 = revenue_growth_2024 > 20\n        \n        # 所有条件同时满足时返回True（存在风险）\n        return condition1 and condition2 and condition3\n        \n    except (ValueError, TypeError):\n        # 处理数据转换错误或类型错误的情况\n        return False"
  },
  {
    "company_name": "科大国盾量子技术股份有限公司",
    "risk_category": "少结转主营业务成本",
    "risk_description": "本年企业应收账款周转率与存货周转率均不到行业均值的90%，毛利率比行业均值高10个百分点以上。（模型公式编号：191101045）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查运营效率与盈利能力异常风险\n    判断条件：\n    1. 企业应收账款周转率 < 行业均值 × 0.9\n    2. 企业存货周转率 < 行业均值 × 0.9\n    3. 企业毛利率 > 行业毛利率 + 10\n    \"\"\"\n    \n    try:\n        # 提取2024年数据\n        # 企业应收账款周转率\n        ar_turnover_company = float(data_dict['model_items'][0]['2024'])\n        # 行业应收账款周转率均值\n        ar_turnover_industry = float(data_dict['model_items'][1]['2024'])\n        # 企业存货周转率\n        inventory_turnover_company = float(data_dict['model_items'][2]['2024'])\n        # 行业存货周转率均值\n        inventory_turnover_industry = float(data_dict['model_items'][3]['2024'])\n        # 企业销售毛利率\n        gross_margin_company = float(data_dict['model_items'][4]['2024'])\n        # 行业销售毛利率均值\n        gross_margin_industry = float(data_dict['model_items'][5]['2024'])\n        \n        # 判断条件1：企业应收账款周转率 < 行业均值 × 0.9\n        condition1 = ar_turnover_company < ar_turnover_industry * 0.9\n        \n        # 判断条件2：企业存货周转率 < 行业均值 × 0.9\n        condition2 = inventory_turnover_company < inventory_turnover_industry * 0.9\n        \n        # 判断条件3：企业毛利率 > 行业毛利率 + 10\n        condition3 = gross_margin_company > gross_margin_industry + 10\n        \n        # 三个条件同时满足时返回True（存在风险）\n        return condition1 and condition2 and condition3\n        \n    except (KeyError, IndexError, ValueError, TypeError):\n        # 处理数据缺失或格式错误的情况\n        return False"
  },
  {
    "company_name": "科大国盾量子技术股份有限公司",
    "risk_category": "少结转主营业务成本",
    "risk_description": "本年企业存货增长率超过营业成本增长率的1.2倍，存货期末余额超过营业成本的1.2倍。（模型公式编号：210601002）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查存货积压风险\n    \n    参数:\n        data_dict: 包含财务数据的字典\n        \n    返回:\n        bool: True表示存在风险，False表示不存在风险\n    \"\"\"\n    try:\n        # 获取本年存货增长率\n        inventory_growth_rate_current = float(data_dict['存货增长率']['2024'])\n        \n        # 获取本年营业成本增长率\n        cost_growth_rate_current = float(data_dict['营业成本增长率']['2024'])\n        \n        # 获取本年存货期末余额\n        inventory_balance_current = float(data_dict['存货']['2024'])\n        \n        # 获取本年营业成本\n        operating_cost_current = float(data_dict['营业成本']['2024'])\n        \n        # 条件1判断：本年存货增长率 > 营业成本增长率 × 1.2\n        condition1 = inventory_growth_rate_current > cost_growth_rate_current * 1.2\n        \n        # 条件2判断：存货期末余额 > 营业成本 × 1.2\n        condition2 = inventory_balance_current > operating_cost_current * 1.2\n        \n        # 风险触发需同时满足两个条件\n        return condition1 and condition2\n        \n    except (KeyError, ValueError, TypeError):\n        # 处理数据缺失或格式错误的情况\n        return False"
  },
  {
    "company_name": "科大国盾量子技术股份有限公司",
    "risk_category": "与供应商存在潜在关联关系",
    "risk_description": "本年企业销售商品、提供劳务收到的现金超过含税营业收入，应付票据及应付账款增长，或减少不到10%。（模型公式编号：191101025）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查现金流与收入匹配异常风险\n    模型公式编号：191101025\n    风险条件：本年销售商品收到的现金超过含税营业收入，且应付票据应付账款减少幅度小于10%或增长\n    \"\"\"\n    \n    try:\n        # 获取所需数据，处理可能的缺失值\n        营业收入_2024 = float(data_dict.get('营业收入_2024', 0))\n        销售现金_2024 = float(data_dict.get('销售商品、提供劳务收到的现金_2024', 0))\n        应付增长率_2024 = float(data_dict.get('应付票据及应付账款增长率_2024', -100))  # 默认-100%确保不满足条件\n        \n        # 条件1：本年销售商品收到的现金 > 含税营业收入（营业收入×1.13）\n        # 计算含税营业收入（假设增值税税率13%）\n        含税营业收入 = 营业收入_2024 * 1.13\n        条件1满足 = 销售现金_2024 > 含税营业收入\n        \n        # 条件2：应付票据及应付账款增长率 > -10%（即减少幅度小于10%或为增长）\n        条件2满足 = 应付增长率_2024 > -10\n        \n        # 风险触发条件：条件1与条件2同时满足\n        存在风险 = 条件1满足 and 条件2满足\n        \n        return 存在风险\n        \n    except (ValueError, TypeError):\n        # 数据格式错误或缺失时返回False（无风险）\n        return False"
  },
  {
    "company_name": "科大国盾量子技术股份有限公司",
    "risk_category": "货币资金错报",
    "risk_description": "本年企业货币资金超过5000万元，货币资金占资产总计的比重超过行业均值，利息收入占本年货币资金平均余额的比例不到1%。（模型公式编号：191101073）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查资金利用效率风险\n    判断条件：\n    1. 本年货币资金 > 5000万元\n    2. 企业货币资金占比 > 行业货币资金占比均值\n    3. 利息收入/货币资金平均余额 < 1%\n    \"\"\"\n    try:\n        # 获取企业本年货币资金（2024年）\n        current_cash = float(data_dict['货币资金']['2024'].replace(',', ''))\n        \n        # 获取企业上年货币资金（2023年）用于计算平均余额\n        previous_cash = float(data_dict['货币资金']['2023'].replace(',', ''))\n        \n        # 计算货币资金平均余额\n        avg_cash_balance = (current_cash + previous_cash) / 2\n        \n        # 获取企业本年利息收入\n        interest_income = float(data_dict['利息收入']['2024'].replace(',', ''))\n        \n        # 获取企业货币资金占比（2024年）\n        company_cash_ratio = float(data_dict['货币资金占资产总计比(%)']['2024'])\n        \n        # 获取行业货币资金占比均值（2024年）\n        industry_cash_ratio = float(data_dict['货币资金占资产总计比(%)_行业']['2024'])\n        \n        # 条件1：本年货币资金 > 5000万元\n        condition1 = current_cash > 50000000\n        \n        # 条件2：企业货币资金占比 > 行业货币资金占比均值\n        condition2 = company_cash_ratio > industry_cash_ratio\n        \n        # 条件3：利息收入/货币资金平均余额 < 1%\n        if avg_cash_balance > 0:\n            interest_ratio = (interest_income / avg_cash_balance) * 100\n            condition3 = interest_ratio < 1\n        else:\n            condition3 = False\n        \n        # 三个条件同时满足时存在风险\n        return condition1 and condition2 and condition3\n        \n    except (KeyError, ValueError, TypeError):\n        # 处理数据缺失或格式错误的情况\n        return False"
  },
  {
    "company_name": "科大国盾量子技术股份有限公司",
    "risk_category": "违规资金收付",
    "risk_description": "本年企业收到的其他与经营活动有关的现金占经营活动现金流入小计的比重高于行业总体样本中85%的企业。（模型公式编号：191101075）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查企业收到的其他与经营活动有关的现金占经营活动现金流入小计的比重是否高于行业85%分位数\n    \n    参数:\n        data_dict: 包含企业数据和行业基准数据的字典\n        \n    返回:\n        bool: True表示存在风险，False表示不存在风险\n    \"\"\"\n    try:\n        # 获取企业当前年度数据（2024年）\n        company_ratio = data_dict.get('company_ratio_2024')\n        \n        # 获取行业85%分位数基准值\n        industry_85th_percentile = data_dict.get('industry_85th_percentile')\n        \n        # 检查数据是否存在\n        if company_ratio is None or industry_85th_percentile is None:\n            print(\"警告：缺少必要的数据\")\n            return False\n        \n        # 将字符串数据转换为浮点数\n        company_ratio = float(company_ratio)\n        industry_85th_percentile = float(industry_85th_percentile)\n        \n        # 判断条件：企业比率是否高于行业85%分位数\n        if company_ratio > industry_85th_percentile:\n            # 存在风险：非主营业务现金流入占比过高\n            return True\n        else:\n            # 不存在风险：比率在正常范围内\n            return False\n            \n    except (ValueError, TypeError) as e:\n        # 处理数据转换错误或类型错误\n        print(f\"数据处理错误: {e}\")\n        return False\n    except Exception as e:\n        # 处理其他异常情况\n        print(f\"发生未知错误: {e}\")\n        return False"
  },
  {
    "company_name": "科大国盾量子技术股份有限公司",
    "risk_category": "违规资金收付",
    "risk_description": "以前少计、本年多计成本或费用",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查利息费用异常波动风险\n    判断是否存在以前少计、本年多计成本或费用的风险\n    \"\"\"\n    try:\n        # 提取利息费用数据\n        interest_2023 = float(data_dict.get('利息费用_2023', '0').replace(',', ''))\n        interest_2024 = float(data_dict.get('利息费用_2024', '0').replace(',', ''))\n        \n        # 提取债务数据\n        debt_2023 = float(data_dict.get('短长期债务_2023', '0').replace(',', ''))\n        debt_2024 = float(data_dict.get('短长期债务_2024', '0').replace(',', ''))\n        \n        # 检查数据完整性\n        if interest_2023 == 0 or interest_2024 == 0 or debt_2023 == 0 or debt_2024 == 0:\n            return False\n        \n        # 计算利息费用变化率\n        interest_change_rate = (interest_2024 - interest_2023) / interest_2023\n        \n        # 计算债务变化率\n        debt_change_rate = (debt_2024 - debt_2023) / debt_2023\n        \n        # 计算利息费用占债务比例\n        interest_debt_ratio_2023 = interest_2023 / debt_2023\n        interest_debt_ratio_2024 = interest_2024 / debt_2024\n        \n        # 判断条件1：利息费用同比大幅下降（下降79%以上）\n        condition1 = interest_change_rate < -0.79\n        \n        # 判断条件2：短长期债务同比大幅增长（增长41%以上）\n        condition2 = debt_change_rate > 0.41\n        \n        # 判断条件3：利息费用占债务比例异常下降（从5.08%下降至0.75%以下）\n        condition3 = interest_debt_ratio_2024 < 0.0075\n        \n        # 综合判断：三个条件同时满足时认为存在风险\n        if condition1 and condition2 and condition3:\n            return True\n        else:\n            return False\n            \n    except (ValueError, ZeroDivisionError):\n        # 处理数据格式错误或除零错误\n        return False"
  },
  {
    "company_name": "科大国盾量子技术股份有限公司",
    "risk_category": "违规资金收付",
    "risk_description": "本年企业利息费用占“短长期债务”平均余额的比例比上年提高了3个百分点以上。（模型公式编号：191101085）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查本年企业利息费用占短长期债务平均余额的比例比上年提高3个百分点以上的风险\n    \n    参数:\n        data_dict: 包含财务数据的字典\n        \n    返回:\n        bool: True表示存在风险，False表示不存在风险或数据缺失\n    \"\"\"\n    \n    # 检查必需数据是否存在\n    required_keys = [\n        '本年利息费用', '上年利息费用',\n        '本年短期债务余额', '上年短期债务余额',\n        '本年长期债务余额', '上年长期债务余额'\n    ]\n    \n    # 如果任何必需数据缺失，返回False（无法判断风险）\n    for key in required_keys:\n        if key not in data_dict or data_dict[key] is None:\n            return False\n    \n    try:\n        # 提取必需数据\n        interest_current = float(data_dict['本年利息费用'])\n        interest_previous = float(data_dict['上年利息费用'])\n        short_debt_current = float(data_dict['本年短期债务余额'])\n        short_debt_previous = float(data_dict['上年短期债务余额'])\n        long_debt_current = float(data_dict['本年长期债务余额'])\n        long_debt_previous = float(data_dict['上年长期债务余额'])\n        \n        # 计算本年短长期债务平均余额\n        total_debt_current = short_debt_current + long_debt_current\n        \n        # 计算上年短长期债务平均余额\n        total_debt_previous = short_debt_previous + long_debt_previous\n        \n        # 计算本年利息费用占比（利息费用/债务平均余额）\n        if total_debt_current != 0:\n            ratio_current = (interest_current / total_debt_current) * 100  # 转换为百分比\n        else:\n            # 如果本年债务余额为0，无法计算比例，返回False\n            return False\n        \n        # 计算上年利息费用占比\n        if total_debt_previous != 0:\n            ratio_previous = (interest_previous / total_debt_previous) * 100  # 转换为百分比\n        else:\n            # 如果上年债务余额为0，无法计算比例，返回False\n            return False\n        \n        # 判断本年比例是否比上年提高3个百分点以上\n        if ratio_current - ratio_previous > 3:\n            return True  # 存在风险\n        else:\n            return False  # 不存在风险\n            \n    except (ValueError, TypeError):\n        # 处理数据转换异常\n        return False"
  },
  {
    "company_name": "科大国盾量子技术股份有限公司",
    "risk_category": "投资收益或资产处置收益错报",
    "risk_description": "企业总资产周转率连续两年低于行业均值，“经营业务利润”连续两年为负，本年营业利润较上年增长。（模型公式编号：191101019）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查企业经营效率与盈利能力风险\n    判断条件：\n    1. 总资产周转率连续两年低于行业均值\n    2. 经营业务利润连续两年为负\n    3. 本年营业利润较上年增长\n    \"\"\"\n    \n    # 检查必需数据是否存在\n    required_keys = [\n        '企业总资产周转率_2023', '企业总资产周转率_2024',\n        '行业总资产周转率均值_2023', '行业总资产周转率均值_2024',\n        '企业经营业务利润_2023', '企业经营业务利润_2024',\n        '企业营业利润_2023', '企业营业利润_2024'\n    ]\n    \n    # 如果任何必需数据缺失，返回False（无法判断风险）\n    for key in required_keys:\n        if key not in data_dict or data_dict[key] is None:\n            return False\n    \n    try:\n        # 获取企业总资产周转率数据\n        asset_turnover_2023 = float(data_dict['企业总资产周转率_2023'])\n        asset_turnover_2024 = float(data_dict['企业总资产周转率_2024'])\n        \n        # 获取行业总资产周转率均值数据\n        industry_avg_2023 = float(data_dict['行业总资产周转率均值_2023'])\n        industry_avg_2024 = float(data_dict['行业总资产周转率均值_2024'])\n        \n        # 获取企业经营业务利润数据\n        operating_profit_2023 = float(data_dict['企业经营业务利润_2023'])\n        operating_profit_2024 = float(data_dict['企业经营业务利润_2024'])\n        \n        # 获取企业营业利润数据\n        business_profit_2023 = float(data_dict['企业营业利润_2023'])\n        business_profit_2024 = float(data_dict['企业营业利润_2024'])\n        \n        # 判断条件1：总资产周转率连续两年低于行业均值\n        condition1 = (asset_turnover_2023 < industry_avg_2023 and \n                     asset_turnover_2024 < industry_avg_2024)\n        \n        # 判断条件2：经营业务利润连续两年为负\n        condition2 = (operating_profit_2023 < 0 and \n                     operating_profit_2024 < 0)\n        \n        # 判断条件3：本年营业利润较上年增长\n        condition3 = business_profit_2024 > business_profit_2023\n        \n        # 三个条件同时满足时存在风险\n        return condition1 and condition2 and condition3\n        \n    except (ValueError, TypeError):\n        # 数据处理异常时返回False\n        return False"
  },
  {
    "company_name": "扬州海昌新材股份有限公司",
    "risk_category": "虚增营业收入",
    "risk_description": "本年企业“每元固定资产提供的营业收入”超过上年的1.2倍，固定资产减少不到10%，营业收入增长超过20%。（模型公式编号：191101080）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查固定资产使用效率异常风险\n    判断条件：\n    1. 本年每元固定资产提供的营业收入 > 上年值的1.2倍\n    2. 固定资产减少率 < 10%（即增长率 > -10%）\n    3. 营业收入增长率 > 20%\n    \"\"\"\n    \n    try:\n        # 获取所需数据\n        revenue_per_asset_2023 = float(data_dict.get(\"2023年每元固定资产及使用权资产提供的营业收入\", 0))\n        revenue_per_asset_2024 = float(data_dict.get(\"2024年每元固定资产及使用权资产提供的营业收入\", 0))\n        fixed_asset_growth_2024 = float(data_dict.get(\"2024年固定资产及使用权资产增长率\", 0))\n        revenue_growth_2024 = float(data_dict.get(\"2024年营业收入增长率\", 0))\n        \n        # 检查数据有效性\n        if revenue_per_asset_2023 == 0 or revenue_per_asset_2024 == 0:\n            return False\n        \n        # 条件1：本年每元固定资产提供的营业收入 > 上年值的1.2倍\n        condition1 = revenue_per_asset_2024 > revenue_per_asset_2023 * 1.2\n        \n        # 条件2：固定资产增长率 > -10%（即减少率 < 10%）\n        condition2 = fixed_asset_growth_2024 > -10\n        \n        # 条件3：营业收入增长率 > 20%\n        condition3 = revenue_growth_2024 > 20\n        \n        # 所有条件都满足时存在风险\n        return condition1 and condition2 and condition3\n        \n    except (ValueError, TypeError):\n        # 数据缺失或格式错误时返回False\n        return False"
  },
  {
    "company_name": "扬州海昌新材股份有限公司",
    "risk_category": "提前确认营业收入",
    "risk_description": "本年企业应收账款周转率降低，存货周转率提高，营业收入增长超过20%。（模型公式编号：191101035）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查营运效率与增长不匹配风险\n    \n    参数:\n        data_dict: 包含财务数据的字典\n        \n    返回:\n        bool: True表示存在风险，False表示不存在风险\n    \"\"\"\n    \n    try:\n        # 检查必要的数据字段是否存在\n        required_fields = [\n            '应收票据、应收账款、应收款项融资及合同资产周转率',\n            '存货周转率', \n            '营业收入增长率'\n        ]\n        \n        for field in required_fields:\n            if field not in data_dict:\n                return False  # 数据缺失时认为不存在风险\n        \n        # 获取各项财务指标数据\n        ar_turnover = data_dict['应收票据、应收账款、应收款项融资及合同资产周转率']\n        inventory_turnover = data_dict['存货周转率']\n        revenue_growth = data_dict['营业收入增长率']\n        \n        # 检查数据是否为字典格式且包含2023和2024年数据\n        if not (isinstance(ar_turnover, dict) and isinstance(inventory_turnover, dict) and isinstance(revenue_growth, dict)):\n            return False\n        \n        if not ('2023' in ar_turnover and '2024' in ar_turnover and\n                '2023' in inventory_turnover and '2024' in inventory_turnover and\n                '2023' in revenue_growth and '2024' in revenue_growth):\n            return False\n        \n        # 转换为数值类型\n        ar_2023 = float(ar_turnover['2023'])\n        ar_2024 = float(ar_turnover['2024'])\n        inv_2023 = float(inventory_turnover['2023'])\n        inv_2024 = float(inventory_turnover['2024'])\n        rev_2023 = float(revenue_growth['2023'])\n        rev_2024 = float(revenue_growth['2024'])\n        \n        # 判断条件1: 应收账款周转率是否下降\n        ar_decreased = ar_2024 < ar_2023\n        \n        # 判断条件2: 存货周转率是否提高\n        inv_increased = inv_2024 > inv_2023\n        \n        # 判断条件3: 营业收入增长率是否超过20%\n        revenue_growth_over_20 = rev_2024 > 20.0\n        \n        # 综合风险判断: 应收账款周转率下降 + 存货周转率提高 + 营业收入增长率超过20%\n        risk_exists = ar_decreased and inv_increased and revenue_growth_over_20\n        \n        return risk_exists\n        \n    except (ValueError, TypeError, KeyError):\n        # 处理数据转换错误或键值错误\n        return False"
  },
  {
    "company_name": "扬州海昌新材股份有限公司",
    "risk_category": "少结转主营业务成本",
    "risk_description": "本年企业销售毛利增长率比营业收入增长率高10个百分点以上，存货增长超过15%。（模型公式编号：191101044）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查运营效率与存货管理风险\n    判断条件：本年销售毛利增长率比营业收入增长率高10个百分点以上，且存货增长率超过15%\n    \"\"\"\n    try:\n        # 从数据字典中提取所需指标的本年数据\n        gross_profit_growth = float(data_dict['销售毛利增长率']['2024'])\n        revenue_growth = float(data_dict['营业收入增长率']['2024'])\n        inventory_growth = float(data_dict['存货增长率']['2024'])\n        \n        # 判断条件1：销售毛利增长率比营业收入增长率高10个百分点以上\n        condition1 = (gross_profit_growth - revenue_growth) > 10\n        \n        # 判断条件2：存货增长率超过15%\n        condition2 = inventory_growth > 15\n        \n        # 两个条件同时满足时存在风险\n        return condition1 and condition2\n        \n    except (KeyError, ValueError, TypeError):\n        # 处理数据缺失或格式错误的情况\n        return False"
  },
  {
    "company_name": "扬州海昌新材股份有限公司",
    "risk_category": "货币资金错报",
    "risk_description": "本年企业货币资金超过“短长期债务”的5倍，股本无变动或增长不到1%，资本公积无变动或增长不到5%。（模型公式编号：191101103）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查资金冗余与资本结构变动不足风险\n    \n    判断条件：\n    1. 本年货币资金 > 5 × 短长期债务\n    2. 股本增长率 ≤ 1%\n    3. 资本公积增长率 ≤ 5%\n    以上三个条件需同时满足\n    \"\"\"\n    \n    try:\n        # 获取本年度的财务数据\n        # 货币资金（2024年数据）\n        monetary_fund = float(data_dict['model_items'][0]['2024'].replace(',', ''))\n        \n        # 短长期债务（2024年数据）\n        total_debt = float(data_dict['model_items'][1]['2024'].replace(',', ''))\n        \n        # 股本增长率（2024年数据，百分比形式）\n        equity_growth_rate = float(data_dict['model_items'][2]['2024'].replace(',', ''))\n        \n        # 资本公积增长率（2024年数据，百分比形式）\n        capital_reserve_growth_rate = float(data_dict['model_items'][3]['2024'].replace(',', ''))\n        \n        # 判断条件1：本年货币资金 > 5 × 短长期债务\n        condition1 = monetary_fund > 5 * total_debt\n        \n        # 判断条件2：股本增长率 ≤ 1%\n        condition2 = equity_growth_rate <= 1.0\n        \n        # 判断条件3：资本公积增长率 ≤ 5%\n        condition3 = capital_reserve_growth_rate <= 5.0\n        \n        # 三个条件需同时满足才存在风险\n        return condition1 and condition2 and condition3\n        \n    except (KeyError, ValueError, TypeError, IndexError):\n        # 处理数据缺失或格式错误的情况\n        return False"
  },
  {
    "company_name": "扬州海昌新材股份有限公司",
    "risk_category": "违规资金收付",
    "risk_description": "本年企业收到的其他与经营活动有关的现金占经营活动现金流入小计的比重高于行业总体样本中85%的企业。（模型公式编号：191101075）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查企业收到的其他与经营活动有关的现金占经营活动现金流入小计的比重是否高于行业85%分位数\n    \n    参数:\n        data_dict: 包含企业和行业财务数据的字典\n        \n    返回:\n        bool: True表示存在风险，False表示不存在风险\n    \"\"\"\n    try:\n        # 获取企业2024年指标值\n        enterprise_ratio_2024 = float(data_dict.get('enterprise_ratio_2024', 0))\n        \n        # 获取行业85%分位数值\n        industry_85_percentile = float(data_dict.get('industry_85_percentile', 0))\n        \n        # 检查数据完整性\n        if enterprise_ratio_2024 == 0 or industry_85_percentile == 0:\n            print(\"警告：数据缺失或为0，无法进行有效风险判断\")\n            return False\n        \n        # 判断风险条件：企业指标值 > 行业85%分位数值\n        risk_exists = enterprise_ratio_2024 > industry_85_percentile\n        \n        return risk_exists\n        \n    except (ValueError, TypeError) as e:\n        print(f\"数据处理错误: {e}\")\n        return False\n    except Exception as e:\n        print(f\"未知错误: {e}\")\n        return False"
  },
  {
    "company_name": "扬州海昌新材股份有限公司",
    "risk_category": "少计成本或费用",
    "risk_description": "本年企业营业收入增长超过20%，“经营业务利润”增长率比营业收入增长率高30个百分点以上。（模型公式编号：191101010）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查收入与利润增长不匹配风险\n    判断条件：\n    1. 本年营业收入增长率 > 20%\n    2. 经营业务利润增长率 - 营业收入增长率 > 30%\n    \"\"\"\n    try:\n        # 获取营业收入增长率（2024年数据）\n        revenue_growth = float(data_dict.get('营业收入增长率', {}).get('2024', 0))\n        \n        # 获取经营业务利润增长率（2024年数据）\n        profit_growth = float(data_dict.get('经营业务利润增长率', {}).get('2024', 0))\n        \n        # 判断条件1：本年营业收入增长率 > 20%\n        condition1 = revenue_growth > 20\n        \n        # 判断条件2：经营业务利润增长率 - 营业收入增长率 > 30%\n        condition2 = (profit_growth - revenue_growth) > 30\n        \n        # 两个条件同时满足时存在风险\n        return condition1 and condition2\n        \n    except (ValueError, TypeError, AttributeError):\n        # 处理数据缺失或格式错误的情况\n        return False"
  },
  {
    "company_name": "扬州海昌新材股份有限公司",
    "risk_category": "少计成本或费用",
    "risk_description": "企业总资产周转率连续两年不到行业均值的90%，本年毛利率超过行业均值的1.1倍，本年营业利润为正，且较上年增长。（模型公式编号：191101051）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查运营效率与盈利能力不匹配风险\n    \n    判断条件：\n    1. 企业总资产周转率连续两年低于行业均值的90%\n    2. 本年销售毛利率超过行业均值的1.1倍\n    3. 本年营业利润为正\n    4. 本年营业利润较上年增长\n    \n    参数:\n        data_dict: 包含企业和行业财务数据的字典\n        \n    返回:\n        bool: True表示存在风险，False表示不存在风险\n    \"\"\"\n    try:\n        # 提取企业数据\n        company_tat_2023 = float(data_dict['企业']['总资产周转率']['2023'])\n        company_tat_2024 = float(data_dict['企业']['总资产周转率']['2024'])\n        company_gross_margin_2024 = float(data_dict['企业']['销售毛利率']['2024'])\n        company_op_profit_2024 = float(data_dict['企业']['营业利润']['2024'])\n        company_op_profit_growth_2024 = float(data_dict['企业']['营业利润增长率']['2024'])\n        \n        # 提取行业数据\n        industry_tat_2023 = float(data_dict['行业']['总资产周转率']['2023'])\n        industry_tat_2024 = float(data_dict['行业']['总资产周转率']['2024'])\n        industry_gross_margin_2024 = float(data_dict['行业']['销售毛利率']['2024'])\n        \n        # 判断条件1: 企业总资产周转率连续两年低于行业均值的90%\n        condition1 = (company_tat_2023 < industry_tat_2023 * 0.9 and \n                     company_tat_2024 < industry_tat_2024 * 0.9)\n        \n        # 判断条件2: 本年销售毛利率超过行业均值的1.1倍\n        condition2 = company_gross_margin_2024 > industry_gross_margin_2024 * 1.1\n        \n        # 判断条件3: 本年营业利润为正\n        condition3 = company_op_profit_2024 > 0\n        \n        # 判断条件4: 本年营业利润较上年增长\n        condition4 = company_op_profit_growth_2024 > 0\n        \n        # 所有条件都满足时返回True（存在风险）\n        return condition1 and condition2 and condition3 and condition4\n        \n    except (KeyError, ValueError, TypeError):\n        # 处理数据缺失或格式错误的情况\n        return False"
  },
  {
    "company_name": "扬州海昌新材股份有限公司",
    "risk_category": "与关联方易货交易",
    "risk_description": "本年企业销售商品、提供劳务收到的现金不到含税营业收入的80%，应付票据及应付账款减少，或增长不到10%。（模型公式编号：191101022）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查现金流与营业收入匹配度风险\n    判断条件：\n    1. 销售商品、提供劳务收到的现金 / 营业收入 < 0.8\n    2. 应付票据及应付账款增长率 < 0.1 或 应付票据及应付账款增长率为负数\n    \"\"\"\n    \n    try:\n        # 获取2024年营业收入\n        revenue_2024 = float(data_dict['营业收入']['2024'].replace(',', ''))\n        \n        # 获取2024年销售商品、提供劳务收到的现金\n        cash_received_2024 = float(data_dict['销售商品、提供劳务收到的现金']['2024'].replace(',', ''))\n        \n        # 获取2024年应付票据及应付账款增长率\n        payables_growth_2024 = float(data_dict['应付票据及应付账款增长率']['2024'])\n        \n        # 计算现金收入占营业收入的比例\n        cash_revenue_ratio = cash_received_2024 / revenue_2024\n        \n        # 判断条件1：现金收入比例是否小于80%\n        condition1 = cash_revenue_ratio < 0.8\n        \n        # 判断条件2：应付账款增长率是否小于10%或为负数\n        condition2 = payables_growth_2024 < 0.1\n        \n        # 两个条件同时满足时存在风险\n        return condition1 and condition2\n        \n    except (KeyError, ValueError, TypeError, ZeroDivisionError):\n        # 处理数据缺失或格式错误的情况\n        return False"
  },
  {
    "company_name": "扬州海昌新材股份有限公司",
    "risk_category": "与关联方易货交易",
    "risk_description": "企业销售商品、提供劳务收到的现金连续两年不到含税营业收入的80%，本年应付票据及应付账款减少，或增长不到10%。（模型公式编号：191101024）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查现金流与营业收入匹配度风险及应付账款变动风险\n    返回True表示存在风险，False表示不存在风险\n    \"\"\"\n    try:\n        # 提取所需数据\n        revenue_2023 = float(data_dict['营业收入']['2023'])\n        revenue_2024 = float(data_dict['营业收入']['2024'])\n        cash_received_2023 = float(data_dict['销售商品、提供劳务收到的现金']['2023'])\n        cash_received_2024 = float(data_dict['销售商品、提供劳务收到的现金']['2024'])\n        payables_growth_2024 = float(data_dict['应付票据及应付账款增长率']['2024'])\n        \n        # 计算含税营业收入（假设增值税税率为13%）\n        tax_rate = 0.13\n        tax_revenue_2023 = revenue_2023 * (1 + tax_rate)\n        tax_revenue_2024 = revenue_2024 * (1 + tax_rate)\n        \n        # 判断条件1：销售商品、提供劳务收到的现金连续两年不到含税营业收入的80%\n        cash_ratio_2023 = cash_received_2023 / tax_revenue_2023\n        cash_ratio_2024 = cash_received_2024 / tax_revenue_2024\n        \n        condition1 = cash_ratio_2023 < 0.8 and cash_ratio_2024 < 0.8\n        \n        # 判断条件2：本年应付票据及应付账款减少（增长率为负）或增长不到10%\n        condition2 = payables_growth_2024 < 0 or payables_growth_2024 < 10\n        \n        # 两个条件都满足时存在风险\n        return condition1 and condition2\n        \n    except (KeyError, ValueError, TypeError, ZeroDivisionError):\n        # 处理数据缺失或格式错误的情况\n        return False"
  },
  {
    "company_name": "扬州海昌新材股份有限公司",
    "risk_category": "信用或资产减值损失错报",
    "risk_description": "本年企业资产减值损失为负值，上年为正值；或本年为正值，上年为负值。（注：由于利润表格式的变化，请自行确认该值系统取数正负号是否正确。）（模型公式编号：210601008）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查资产减值损失波动异常风险\n    判断条件：本年资产减值损失与上年资产减值损失符号相反\n    \"\"\"\n    \n    # 从数据字典中提取所需数据\n    try:\n        # 获取2023年和2024年的资产减值损失数据\n        loss_2023 = data_dict.get('2023')\n        loss_2024 = data_dict.get('2024')\n        \n        # 检查数据是否存在\n        if loss_2023 is None or loss_2024 is None:\n            return False  # 数据缺失时返回无风险\n        \n        # 将字符串数据转换为浮点数（处理逗号分隔符）\n        if isinstance(loss_2023, str):\n            loss_2023 = float(loss_2023.replace(',', ''))\n        if isinstance(loss_2024, str):\n            loss_2024 = float(loss_2024.replace(',', ''))\n        \n        # 判断条件：本年值与上年值符号相反\n        # 情况1：本年值为负且上年值为正\n        condition1 = loss_2024 < 0 and loss_2023 > 0\n        # 情况2：本年值为正且上年值为负\n        condition2 = loss_2024 > 0 and loss_2023 < 0\n        \n        # 返回风险判断结果\n        return condition1 or condition2\n        \n    except (ValueError, TypeError):\n        # 处理数据转换错误或其他异常情况\n        return False  # 数据格式错误时返回无风险"
  },
  {
    "company_name": "北京诺思兰德生物技术股份有限公司",
    "risk_category": "虚增营业收入",
    "risk_description": "本年企业营业收入增长超过20%，应收账款周转率高于行业总体样本中85%的企业。（模型公式编号：191101030）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查收入增长与应收账款周转率不匹配风险\n    \n    参数:\n        data_dict: 包含财务数据的字典\n        \n    返回:\n        bool: True表示存在风险，False表示不存在风险\n    \"\"\"\n    \n    try:\n        # 获取企业本年营业收入增长率数据\n        # 判断条件1: 本年企业营业收入增长率 > 20%\n        revenue_growth_rate = None\n        for item in data_dict.get('model_items', []):\n            if (item.get('项目名称') == '营业收入增长率' and \n                item.get('类型') == '企业'):\n                revenue_growth_rate = float(item.get('2024', 0))\n                break\n        \n        # 如果数据缺失，返回False（无风险）\n        if revenue_growth_rate is None:\n            return False\n        \n        # 获取企业本年应收账款周转率数据\n        enterprise_turnover_rate = None\n        for item in data_dict.get('model_items', []):\n            if (item.get('项目名称') == '应收票据、应收账款、应收款项融资及合同资产周转率【次】' and \n                item.get('类型') == '企业'):\n                enterprise_turnover_rate = float(item.get('2024', 0))\n                break\n        \n        # 如果数据缺失，返回False（无风险）\n        if enterprise_turnover_rate is None:\n            return False\n        \n        # 获取行业应收账款周转率样本数据并计算85分位数\n        industry_samples = []\n        for item in data_dict.get('model_items', []):\n            if (item.get('项目名称') == '应收票据、应收账款、应收款项融资及合同资产周转率【次】' and \n                item.get('类型') == '行业'):\n                # 这里假设行业数据包含多个样本值\n                # 实际应用中可能需要从其他途径获取完整的行业样本数据\n                industry_samples.append(float(item.get('2024', 0)))\n        \n        # 如果行业样本数据不足，无法计算85分位数，返回False（无风险）\n        if len(industry_samples) < 1:\n            return False\n        \n        # 计算行业85分位数\n        import numpy as np\n        industry_85_percentile = np.percentile(industry_samples, 85)\n        \n        # 判断条件2: 企业应收账款周转率 > 行业85分位数水平\n        # 综合判断：两个条件都满足时存在风险\n        risk_exists = (revenue_growth_rate > 20.0 and \n                      enterprise_turnover_rate > industry_85_percentile)\n        \n        return risk_exists\n        \n    except (ValueError, TypeError):\n        # 处理数据转换错误或其他异常情况\n        return False"
  },
  {
    "company_name": "北京诺思兰德生物技术股份有限公司",
    "risk_category": "虚增营业收入",
    "risk_description": "本年企业应收账款周转率和存货周转率之比超过5，比行业均值之比大2。（模型公式编号：231201007）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查运营效率风险\n    \n    判断条件：\n    1. 企业应收账款周转率与存货周转率之比 > 5\n    2. 企业两周转率之比 - 行业两周转率之比 > 2\n    \"\"\"\n    \n    try:\n        # 获取企业数据\n        enterprise_ar_turnover = float(data_dict['企业']['应收账款周转率'])\n        enterprise_inventory_turnover = float(data_dict['企业']['存货周转率'])\n        \n        # 获取行业数据\n        industry_ar_turnover = float(data_dict['行业']['应收账款周转率'])\n        industry_inventory_turnover = float(data_dict['行业']['存货周转率'])\n        \n        # 计算企业两周转率之比\n        enterprise_ratio = enterprise_ar_turnover / enterprise_inventory_turnover\n        \n        # 计算行业两周转率之比\n        industry_ratio = industry_ar_turnover / industry_inventory_turnover\n        \n        # 判断条件1：企业两周转率之比 > 5\n        condition1 = enterprise_ratio > 5\n        \n        # 判断条件2：企业两周转率之比 - 行业两周转率之比 > 2\n        condition2 = (enterprise_ratio - industry_ratio) > 2\n        \n        # 两个条件都满足时存在风险\n        return condition1 and condition2\n        \n    except (KeyError, ValueError, TypeError, ZeroDivisionError):\n        # 处理数据缺失或格式错误的情况\n        return False"
  },
  {
    "company_name": "北京诺思兰德生物技术股份有限公司",
    "risk_category": "提前确认营业收入",
    "risk_description": "本年企业营业收入增长超过20%，且高于销售商品和提供劳务收到的现金增长率的1.1倍，行业营业收入增长率均值低于销售商品和提供劳务收到的现金增长率均值。（模型公式编号：191101003）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查收入质量风险/收入与现金流不匹配风险\n    \n    参数:\n        data_dict: 包含财务数据的字典\n        \n    返回:\n        bool: True表示存在风险，False表示不存在风险\n    \"\"\"\n    \n    try:\n        # 从数据字典中提取所需数据\n        # 企业营业收入增长率（2024年）\n        enterprise_revenue_growth = float(data_dict.get('企业营业收入增长率_2024', 0))\n        \n        # 企业销售商品、提供劳务收到的现金增长率（2024年）\n        enterprise_cash_growth = float(data_dict.get('企业销售商品、提供劳务收到的现金增长率_2024', 0))\n        \n        # 行业营业收入增长率均值（2024年）\n        industry_revenue_growth = float(data_dict.get('行业营业收入增长率均值_2024', 0))\n        \n        # 行业销售商品、提供劳务收到的现金增长率均值（2024年）\n        industry_cash_growth = float(data_dict.get('行业销售商品、提供劳务收到的现金增长率均值_2024', 0))\n        \n        # 条件1：本年企业营业收入增长率 > 20%\n        condition1 = enterprise_revenue_growth > 20\n        \n        # 条件2：企业营业收入增长率 > 企业销售商品、提供劳务收到的现金增长率 × 1.1\n        condition2 = enterprise_revenue_growth > (enterprise_cash_growth * 1.1)\n        \n        # 条件3：行业营业收入增长率均值 < 行业销售商品、提供劳务收到的现金增长率均值\n        condition3 = industry_revenue_growth < industry_cash_growth\n        \n        # 所有条件同时满足时判定为存在风险\n        return condition1 and condition2 and condition3\n        \n    except (ValueError, TypeError):\n        # 处理数据缺失或格式错误的情况\n        return False"
  },
  {
    "company_name": "北京诺思兰德生物技术股份有限公司",
    "risk_category": "提前确认营业收入",
    "risk_description": "本年企业营业收入增长超过20%，营业收入增长率超过销售商品和提供劳务收到的现金增长率的1.5倍。（模型公式编号：210101002）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查收入与现金流增长不匹配风险\n    \n    参数:\n        data_dict: 包含财务数据的字典\n        \n    返回:\n        bool: True表示存在风险，False表示不存在风险\n    \"\"\"\n    try:\n        # 获取营业收入增长率\n        revenue_growth_rate = float(data_dict.get('营业收入增长率', 0))\n        \n        # 获取销售商品、提供劳务收到的现金增长率\n        cash_growth_rate = float(data_dict.get('销售商品、提供劳务收到的现金增长率', 0))\n        \n        # 判断条件1: 本年营业收入增长率 > 20%\n        condition1 = revenue_growth_rate > 20\n        \n        # 判断条件2: 营业收入增长率 > 1.5 × 销售商品、提供劳务收到的现金增长率\n        condition2 = revenue_growth_rate > 1.5 * cash_growth_rate\n        \n        # 同时满足两个条件则存在风险\n        return condition1 and condition2\n        \n    except (TypeError, ValueError):\n        # 处理数据缺失或格式错误的情况\n        return False"
  },
  {
    "company_name": "北京诺思兰德生物技术股份有限公司",
    "risk_category": "持续经营假设不合理",
    "risk_description": "企业经营活动产生的现金流量净额连续三年为负，本年营业利润较上年增长。（模型公式编号：191101053）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查企业经营活动产生的现金流量净额连续三年为负且本年营业利润较上年增长的风险\n    \n    参数:\n        data_dict: 包含财务数据的字典，需要包含以下键:\n            - '经营活动产生的现金流量净额_2022'\n            - '经营活动产生的现金流量净额_2023' \n            - '经营活动产生的现金流量净额_2024'\n            - '营业利润_2023'\n            - '营业利润_2024'\n    \n    返回:\n        bool: True表示存在风险，False表示不存在风险或数据不完整\n    \"\"\"\n    \n    # 检查必需数据是否存在\n    required_keys = [\n        '经营活动产生的现金流量净额_2022',\n        '经营活动产生的现金流量净额_2023',\n        '经营活动产生的现金流量净额_2024',\n        '营业利润_2023',\n        '营业利润_2024'\n    ]\n    \n    # 如果有任何必需数据缺失，返回False（无法判断风险）\n    for key in required_keys:\n        if key not in data_dict:\n            return False\n    \n    try:\n        # 获取现金流量数据并转换为浮点数\n        cash_flow_2022 = float(data_dict['经营活动产生的现金流量净额_2022'])\n        cash_flow_2023 = float(data_dict['经营活动产生的现金流量净额_2023'])\n        cash_flow_2024 = float(data_dict['经营活动产生的现金流量净额_2024'])\n        \n        # 获取营业利润数据并转换为浮点数\n        profit_2023 = float(data_dict['营业利润_2023'])\n        profit_2024 = float(data_dict['营业利润_2024'])\n        \n        # 判断条件1：经营活动产生的现金流量净额连续三年为负\n        cash_flow_negative_for_3_years = (\n            cash_flow_2022 < 0 and \n            cash_flow_2023 < 0 and \n            cash_flow_2024 < 0\n        )\n        \n        # 判断条件2：本年（2024年）营业利润较上年（2023年）实现增长\n        profit_increased = profit_2024 > profit_2023\n        \n        # 两个条件都满足时返回True（存在风险）\n        return cash_flow_negative_for_3_years and profit_increased\n        \n    except (ValueError, TypeError):\n        # 如果数据转换失败（非数值类型），返回False\n        return False"
  },
  {
    "company_name": "北京诺思兰德生物技术股份有限公司",
    "risk_category": "与供应商存在潜在关联关系",
    "risk_description": "本年企业不含税应付票据及应付账款超过存货，在建工程减少或增长不到10%，且应付票据及应付账款占总资产比重超过行业均值。（模型公式编号：191101101）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查流动性风险与偿债压力风险\n    需同时满足三个条件：\n    1) 本年不含税应付票据及应付账款 > 存货\n    2) 在建工程同比变化率在[-10%, 10%]区间内\n    3) 应付票据及应付账款占总资产比重 > 行业均值\n    \"\"\"\n    try:\n        # 获取所需财务数据\n        accounts_payable = data_dict.get('不含税应付票据及应付账款')\n        inventory = data_dict.get('存货')\n        construction_in_progress_current = data_dict.get('本年在建工程')\n        construction_in_progress_previous = data_dict.get('上年在建工程')\n        total_assets = data_dict.get('总资产')\n        industry_avg_ratio = data_dict.get('行业应付账款占比均值')\n        \n        # 检查数据完整性\n        required_data = [accounts_payable, inventory, construction_in_progress_current, \n                         construction_in_progress_previous, total_assets, industry_avg_ratio]\n        if any(item is None for item in required_data):\n            return False\n        \n        # 条件1：本年不含税应付票据及应付账款 > 存货\n        condition1 = accounts_payable > inventory\n        \n        # 条件2：在建工程同比变化率在[-10%, 10%]区间内\n        if construction_in_progress_previous == 0:\n            growth_rate = 0  # 避免除零错误\n        else:\n            growth_rate = (construction_in_progress_current - construction_in_progress_previous) / construction_in_progress_previous * 100\n        \n        condition2 = -10 <= growth_rate <= 10\n        \n        # 条件3：应付票据及应付账款占总资产比重 > 行业均值\n        payables_ratio = accounts_payable / total_assets * 100\n        condition3 = payables_ratio > industry_avg_ratio\n        \n        # 三个条件需同时满足\n        return condition1 and condition2 and condition3\n        \n    except (TypeError, ZeroDivisionError):\n        # 处理数据类型错误或除零错误\n        return False"
  },
  {
    "company_name": "北京诺思兰德生物技术股份有限公司",
    "risk_category": "与供应商存在潜在关联关系",
    "risk_description": "本年企业应付账款占存货的比例高于行业总体样本中85%的企业。（模型公式编号：210601021）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查流动性风险：判断企业应付账款占存货的比例是否高于行业85分位数\n    \n    参数:\n        data_dict: 包含财务数据的字典\n        \n    返回:\n        bool: True表示存在风险，False表示不存在风险\n    \"\"\"\n    \n    # 检查必需的企业数据是否存在\n    if '应付票据及应付账款' not in data_dict or '存货' not in data_dict:\n        # 关键数据缺失，无法进行风险判断\n        return False\n    \n    # 检查行业85分位数数据是否存在\n    if '行业应付账款占存货比例_85分位数' not in data_dict:\n        # 行业分位数数据缺失，无法进行完整风险判断\n        # 根据要求，缺少行业分位数数据时仅计算企业比例，不进行风险判断\n        return False\n    \n    try:\n        # 获取企业应付票据及应付账款数据（转换为浮点数）\n        accounts_payable = float(data_dict['应付票据及应付账款'])\n        \n        # 获取企业存货数据（转换为浮点数）\n        inventory = float(data_dict['存货'])\n        \n        # 获取行业85分位数阈值（转换为浮点数）\n        industry_percentile_85 = float(data_dict['行业应付账款占存货比例_85分位数'])\n        \n        # 计算企业应付账款占存货的比例\n        if inventory == 0:\n            # 存货为0，无法计算比例，视为无风险\n            return False\n            \n        company_ratio = accounts_payable / inventory\n        \n        # 判断风险条件：企业比例是否高于行业85分位数\n        # 如果企业比例高于行业85分位数，则存在风险（返回True）\n        # 否则不存在风险（返回False）\n        return company_ratio > industry_percentile_85\n        \n    except (ValueError, TypeError):\n        # 数据处理异常，数据格式不正确\n        return False"
  },
  {
    "company_name": "北京诺思兰德生物技术股份有限公司",
    "risk_category": "货币资金错报",
    "risk_description": "本年企业货币资金超过5000万元，货币资金占资产总计的比重超过行业均值，利息收入占本年货币资金平均余额的比例不到1%。（模型公式编号：191101073）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查资金利用效率风险\n    判断条件：\n    1. 本年企业货币资金 > 5000万元\n    2. 货币资金占资产总计的比重 > 行业均值\n    3. 利息收入占本年货币资金平均余额的比例 < 1%\n    \"\"\"\n    \n    try:\n        # 获取所需数据，如果数据缺失则返回False（无风险）\n        monetary_fund = float(data_dict.get('企业本年货币资金金额', 0))  # 企业本年货币资金金额\n        total_assets = float(data_dict.get('企业资产总计金额', 0))  # 企业资产总计金额\n        industry_ratio = float(data_dict.get('行业货币资金占资产总计的平均比例', 0))  # 行业平均比例\n        interest_income = float(data_dict.get('企业本年利息收入金额', 0))  # 企业本年利息收入金额\n        avg_monetary_fund = float(data_dict.get('企业本年货币资金平均余额', 0))  # 货币资金平均余额\n        \n        # 条件1：本年企业货币资金 > 5000万元\n        condition1 = monetary_fund > 50000000\n        \n        # 条件2：货币资金占资产总计的比重 > 行业均值\n        if total_assets > 0:\n            company_ratio = monetary_fund / total_assets\n            condition2 = company_ratio > industry_ratio\n        else:\n            condition2 = False\n        \n        # 条件3：利息收入占本年货币资金平均余额的比例 < 1%\n        if avg_monetary_fund > 0:\n            interest_ratio = interest_income / avg_monetary_fund\n            condition3 = interest_ratio < 0.01\n        else:\n            condition3 = False\n        \n        # 三个条件同时满足时存在风险\n        return condition1 and condition2 and condition3\n        \n    except (ValueError, TypeError):\n        # 处理数据转换错误或类型错误\n        return False"
  },
  {
    "company_name": "北京诺思兰德生物技术股份有限公司",
    "risk_category": "违规资金收付",
    "risk_description": "本年企业收到的其他与经营活动有关的现金占经营活动现金流入小计的比重高于行业总体样本中85%的企业。（模型公式编号：191101075）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查经营活动现金流结构异常风险\n    判断条件：企业本年收到的其他与经营活动有关的现金占经营活动现金流入小计的比例 > 行业85%分位数阈值\n    \"\"\"\n    \n    # 检查必需的企业数据是否存在\n    if ('收到的其他与经营活动有关的现金' not in data_dict or \n        '经营活动现金流入小计' not in data_dict):\n        print(\"缺少现金流量表相关数据，无法完成风险检查\")\n        return False\n    \n    # 检查必需的行业数据是否存在\n    if '行业85分位数阈值' not in data_dict:\n        print(\"缺少行业85%分位数阈值数据，无法完成风险检查\")\n        return False\n    \n    try:\n        # 获取企业现金流量数据\n        other_operating_cash = float(data_dict['收到的其他与经营活动有关的现金'])\n        total_operating_cash_inflow = float(data_dict['经营活动现金流入小计'])\n        \n        # 计算企业现金比例\n        if total_operating_cash_inflow == 0:\n            print(\"经营活动现金流入小计为0，无法计算比例\")\n            return False\n            \n        company_ratio = other_operating_cash / total_operating_cash_inflow\n        \n        # 获取行业85%分位数阈值\n        industry_threshold = float(data_dict['行业85分位数阈值'])\n        \n        # 判断是否存在风险：企业比例 > 行业85%分位数\n        risk_exists = company_ratio > industry_threshold\n        \n        return risk_exists\n        \n    except (ValueError, TypeError) as e:\n        print(f\"数据格式错误: {e}\")\n        return False\n    except ZeroDivisionError:\n        print(\"经营活动现金流入小计为0，无法计算比例\")\n        return False"
  },
  {
    "company_name": "北京诺思兰德生物技术股份有限公司",
    "risk_category": "违规资金收付",
    "risk_description": "以前少计、本年多计成本或费用",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查成本费用确认风险：收到其他与经营活动有关的现金占经营活动现金流入小计的比例异常下降\n    \"\"\"\n    # 检查必需数据是否存在\n    required_keys = ['收到其他与经营活动有关的现金金额', '经营活动现金流入小计金额']\n    for key in required_keys:\n        if key not in data_dict or data_dict[key] is None:\n            return False  # 数据缺失时返回无风险\n    \n    try:\n        # 获取当前年度和上一年度的现金数据\n        current_cash = float(data_dict['收到其他与经营活动有关的现金金额'])\n        current_total = float(data_dict['经营活动现金流入小计金额'])\n        \n        # 计算当前年度的比例\n        if current_total == 0:\n            return False  # 避免除零错误\n            \n        current_ratio = (current_cash / current_total) * 100\n        \n        # 检查是否有历史数据用于比较\n        if '收到其他与经营活动有关的现金金额_上年' not in data_dict or \\\n           '经营活动现金流入小计金额_上年' not in data_dict:\n            return False  # 缺少历史数据时返回无风险\n            \n        # 获取上一年度的数据\n        previous_cash = float(data_dict['收到其他与经营活动有关的现金金额_上年'])\n        previous_total = float(data_dict['经营活动现金流入小计金额_上年'])\n        \n        if previous_total == 0:\n            return False  # 避免除零错误\n            \n        previous_ratio = (previous_cash / previous_total) * 100\n        \n        # 判断条件：比例下降超过阈值（这里设定为5%的下降幅度）\n        ratio_decrease = previous_ratio - current_ratio\n        \n        # 如果比例下降超过5个百分点，则认为存在风险\n        if ratio_decrease > 5:\n            return True  # 存在风险\n        else:\n            return False  # 不存在风险\n            \n    except (ValueError, TypeError):\n        # 处理数据类型转换错误\n        return False"
  },
  {
    "company_name": "北京诺思兰德生物技术股份有限公司",
    "risk_category": "违规资金收付",
    "risk_description": "本年企业管理费用占营业收入的比重较上年的变动值比行业的变动值高5个百分点。（模型公式编号：191101070）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查费用控制风险：企业本年管理费用占营业收入比的变动值比行业变动值高5个百分点\n    \n    参数:\n        data_dict: 包含财务数据的字典，需要包含以下键:\n            - '企业_2023': 企业2023年管理费用占营业收入比(%)\n            - '企业_2024': 企业2024年管理费用占营业收入比(%)\n            - '行业_2023': 行业2023年管理费用占营业收入比(%)\n            - '行业_2024': 行业2024年管理费用占营业收入比(%)\n            - '阈值': 风险阈值(百分点)，默认为5\n    \n    返回:\n        bool: True表示存在风险，False表示不存在风险\n    \"\"\"\n    try:\n        # 从数据字典中提取所需数据\n        # 企业数据\n        company_2023 = float(data_dict.get('企业_2023', 0))\n        company_2024 = float(data_dict.get('企业_2024', 0))\n        \n        # 行业数据\n        industry_2023 = float(data_dict.get('行业_2023', 0))\n        industry_2024 = float(data_dict.get('行业_2024', 0))\n        \n        # 风险阈值（百分点）\n        threshold = float(data_dict.get('阈值', 5))\n        \n        # 检查数据完整性：如果任一关键数据缺失，返回False（无风险）\n        if any(value == 0 for value in [company_2023, company_2024, industry_2023, industry_2024]):\n            return False\n        \n        # 计算企业变动值：本年值 - 上年值\n        company_change = company_2024 - company_2023\n        \n        # 计算行业变动值：本年值 - 上年值\n        industry_change = industry_2024 - industry_2023\n        \n        # 判断条件：企业变动值 - 行业变动值 > 阈值（5个百分点）\n        risk_exists = (company_change - industry_change) > threshold\n        \n        return risk_exists\n        \n    except (ValueError, TypeError):\n        # 处理数据类型转换错误或其他异常情况\n        return False"
  },
  {
    "company_name": "北京诺思兰德生物技术股份有限公司",
    "risk_category": "非正常筹资",
    "risk_description": "本年企业短期借款、一年内到期的非流动负债、长期借款之和比上年减少，应收账款增长，取得借款收到的现金小于偿还债务支付的现金，企业财务费用增长超过50%。（模型公式编号：191101102）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查债务偿还能力风险与融资活动现金流风险\n    返回布尔值：True表示存在风险，False表示不存在风险\n    \"\"\"\n    \n    # 条件1：本年短期借款、一年内到期的非流动负债、长期借款之和 < 上年对应项目之和\n    try:\n        # 获取2024年三项负债之和\n        current_2024 = (data_dict.get('短期借款_2024', 0) or 0) + \\\n                      (data_dict.get('一年内到期的非流动负债_2024', 0) or 0) + \\\n                      (data_dict.get('长期借款_2024', 0) or 0)\n        \n        # 获取2023年三项负债之和\n        current_2023 = (data_dict.get('短期借款_2023', 0) or 0) + \\\n                      (data_dict.get('一年内到期的非流动负债_2023', 0) or 0) + \\\n                      (data_dict.get('长期借款_2023', 0) or 0)\n        \n        condition1 = current_2024 < current_2023\n    except (TypeError, ValueError):\n        condition1 = False\n    \n    # 条件2：本年应收票据、应收账款、应收款项融资及合同资产增长率 > 0\n    try:\n        receivables_growth = data_dict.get('应收票据、应收账款、应收款项融资及合同资产增长率_2024', 0) or 0\n        condition2 = receivables_growth > 0\n    except (TypeError, ValueError):\n        condition2 = False\n    \n    # 条件3：本年取得借款收到的现金 < 本年偿还债务支付的现金\n    try:\n        borrow_received = data_dict.get('取得借款收到的现金_2024', 0) or 0\n        debt_repaid = data_dict.get('偿还债务支付的现金_2024', 0) or 0\n        condition3 = borrow_received < debt_repaid\n    except (TypeError, ValueError):\n        condition3 = False\n    \n    # 条件4：本年财务费用增长率 > 50%\n    try:\n        financial_expense_growth = data_dict.get('财务费用增长率_2024', 0) or 0\n        condition4 = financial_expense_growth > 50\n    except (TypeError, ValueError):\n        condition4 = False\n    \n    # 所有条件都满足时判定为存在风险\n    return condition1 and condition2 and condition3 and condition4"
  },
  {
    "company_name": "北京诺思兰德生物技术股份有限公司",
    "risk_category": "重大资产重组",
    "risk_description": "本年企业资产总计增长超过50%，或营业收入增长超过50%，或所有者权益合计增长超过50%。（模型公式编号：191101108）",
    "python_code": "def check_risk(data_dict):\n    \"\"\"\n    检查财务异常增长风险\n    任一财务指标增长率超过50%即触发风险\n    \"\"\"\n    \n    # 定义风险阈值\n    RISK_THRESHOLD = 50.0\n    \n    # 需要检查的关键财务指标\n    key_indicators = [\n        \"资产总计增长率\",\n        \"营业收入增长率\", \n        \"所有者权益合计增长率\"\n    ]\n    \n    # 遍历所有财务指标数据\n    for item in data_dict.get(\"model_items\", []):\n        indicator_name = item.get(\"项目名称\")\n        \n        # 只处理指定的关键指标\n        if indicator_name not in key_indicators:\n            continue\n            \n        # 获取2024年增长率数据（最新年份）\n        growth_rate_2024 = item.get(\"2024\")\n        \n        # 处理数据缺失情况\n        if growth_rate_2024 is None:\n            continue\n            \n        try:\n            # 转换为浮点数进行比较\n            growth_rate = float(growth_rate_2024)\n            \n            # 检查是否超过风险阈值\n            if growth_rate > RISK_THRESHOLD:\n                return True  # 存在风险\n                \n        except (ValueError, TypeError):\n            # 处理数据格式错误的情况\n            continue\n    \n    # 所有指标都未超过阈值，不存在风险\n    return False"
  }
]